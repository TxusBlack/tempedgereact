{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\src\\\\Pages\\\\Dashboard\\\\GenericDashboard.js\";\nimport React from 'react';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport NavPanelLeft from '../../components/common/NavPanelLeft/NavPanelLeft.js';\nimport InputBox from '../../components/common/InputBox/InputBox.js';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport { push } from 'connected-react-router';\nimport ActiveLanguageAddTranslation from '../../components/common/ActiveLanguageAddTranslation/ActiveLanguageAddTranslation.js';\nimport Validate from '../Validations/Validations';\n\nvar GenericDashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GenericDashboard, _React$Component);\n\n  function GenericDashboard(props) {\n    var _this;\n\n    _classCallCheck(this, GenericDashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GenericDashboard).call(this, props));\n    _this.state = {\n      panelNavShow: false\n    };\n\n    _this.togglePanelNav = function () {\n      _this.setState(function () {\n        return {\n          panelNavShow: !_this.state.panelNavShow\n        }, function () {\n          return console.log(\"panelNavShow: \", _this.state.panelNavShow);\n        };\n      });\n    };\n\n    console.log(\"props: \", props);\n    ActiveLanguageAddTranslation(_this.props.activeLanguage, _this.props.addTranslationForLanguage);\n    return _this;\n  }\n\n  _createClass(GenericDashboard, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n      if (hasActiveLanguageChanged) {\n        this.props.push(\"/approveuser/\".concat(this.props.activeLanguage.code));\n        ActiveLanguageAddTranslation(this.props.activeLanguage, this.props.addTranslationForLanguage);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(NavPanelLeft, {\n        togglePanelNav: this.togglePanelNav,\n        show: this.state.panelNavShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GenericDashboard;\n}(React.Component);\n\nGenericDashboard = reduxForm({\n  form: 'genericDashboard',\n  //                 <------ form name\n  destroyOnUnmount: false,\n  //        <------ preserve form data\n  // forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate: Validate\n})(GenericDashboard);\nexport default withLocalize(connect(null, {\n  push: push\n})(GenericDashboard));","map":{"version":3,"sources":["C:\\Users\\migue\\Documents\\Jose\\TempEdge\\tempedgereact\\tempedgereact - jose\\src\\Pages\\Dashboard\\GenericDashboard.js"],"names":["React","Field","FieldArray","reduxForm","NavPanelLeft","InputBox","connect","withLocalize","Translate","push","ActiveLanguageAddTranslation","Validate","GenericDashboard","props","state","panelNavShow","togglePanelNav","setState","console","log","activeLanguage","addTranslationForLanguage","prevProps","prevState","hasActiveLanguageChanged","code","Component","form","destroyOnUnmount","validate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,YAA7C;AACA,OAAOC,YAAP,MAAyB,sDAAzB;AACA,OAAOC,QAAP,MAAqB,8CAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,sBAAxC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,4BAAP,MAAyC,sFAAzC;AACA,OAAOC,QAAP,MAAqB,4BAArB;;IAEMC,gB;;;;;AACJ,4BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,0FAAMA,KAAN;AADgB,UAMlBC,KANkB,GAMV;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KANU;;AAAA,UAiBlBC,cAjBkB,GAiBD,YAAM;AACrB,YAAKC,QAAL,CAAc;AAAA,eAAO;AAAEF,UAAAA,YAAY,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAA5B,WAA4C;AAAA,iBAAOG,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,MAAKL,KAAL,CAAWC,YAAzC,CAAP;AAAA,SAAnD;AAAA,OAAd;AACD,KAnBiB;;AAEhBG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACAH,IAAAA,4BAA4B,CAAC,MAAKG,KAAL,CAAWO,cAAZ,EAA4B,MAAKP,KAAL,CAAWQ,yBAAvC,CAA5B;AAHgB;AAIjB;;;;uCAIkBC,S,EAAWC,S,EAAU;AACtC,UAAMC,wBAAwB,GAAGF,SAAS,CAACF,cAAV,KAA6B,KAAKP,KAAL,CAAWO,cAAzE;;AAEA,UAAII,wBAAJ,EAA8B;AAC5B,aAAKX,KAAL,CAAWJ,IAAX,wBAAgC,KAAKI,KAAL,CAAWO,cAAX,CAA0BK,IAA1D;AACAf,QAAAA,4BAA4B,CAAC,KAAKG,KAAL,CAAWO,cAAZ,EAA4B,KAAKP,KAAL,CAAWQ,yBAAvC,CAA5B;AACD;AACF;;;6BAMO;AACN,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,cAAc,EAAE,KAAKL,cAAnC;AAAmD,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAMD;;;;EA7B4Bf,KAAK,CAAC0B,S;;AAgCrCd,gBAAgB,GAAGT,SAAS,CAAC;AAC3BwB,EAAAA,IAAI,EAAE,kBADqB;AACD;AAC1BC,EAAAA,gBAAgB,EAAE,KAFS;AAEF;AACzB;AACAC,EAAAA,QAAQ,EAAElB;AAJiB,CAAD,CAAT,CAKhBC,gBALgB,CAAnB;AAOA,eAAeL,YAAY,CAACD,OAAO,CAAC,IAAD,EAAO;AAAEG,EAAAA,IAAI,EAAJA;AAAF,CAAP,CAAP,CAAwBG,gBAAxB,CAAD,CAA3B","sourcesContent":["import React from 'react';\r\nimport { Field, FieldArray, reduxForm } from 'redux-form';\r\nimport NavPanelLeft from '../../components/common/NavPanelLeft/NavPanelLeft.js';\r\nimport InputBox from '../../components/common/InputBox/InputBox.js';\r\nimport { connect } from 'react-redux';\r\nimport { withLocalize, Translate } from 'react-localize-redux';\r\nimport { push } from 'connected-react-router';\r\nimport ActiveLanguageAddTranslation from '../../components/common/ActiveLanguageAddTranslation/ActiveLanguageAddTranslation.js';\r\nimport Validate from '../Validations/Validations';\r\n\r\nclass GenericDashboard extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    console.log(\"props: \", props);\r\n    ActiveLanguageAddTranslation(this.props.activeLanguage, this.props.addTranslationForLanguage);\r\n  }\r\n\r\n  state = { panelNavShow: false }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    const hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\r\n\r\n    if (hasActiveLanguageChanged) {\r\n      this.props.push(`/approveuser/${this.props.activeLanguage.code}`);\r\n      ActiveLanguageAddTranslation(this.props.activeLanguage, this.props.addTranslationForLanguage);\r\n    }\r\n  }\r\n\r\n  togglePanelNav = () => {\r\n    this.setState(() => ({ panelNavShow: !this.state.panelNavShow }, () => (console.log(\"panelNavShow: \", this.state.panelNavShow))));\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <React.Fragment>\r\n        <NavPanelLeft togglePanelNav={this.togglePanelNav} show={this.state.panelNavShow} />\r\n        \r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nGenericDashboard = reduxForm({\r\n  form: 'genericDashboard', //                 <------ form name\r\n  destroyOnUnmount: false, //        <------ preserve form data\r\n  // forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\r\n  validate: Validate\r\n})(GenericDashboard);\r\n\r\nexport default withLocalize(connect(null, { push })(GenericDashboard));\r\n"]},"metadata":{},"sourceType":"module"}