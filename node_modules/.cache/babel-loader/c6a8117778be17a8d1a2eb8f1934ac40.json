{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\src\\\\components\\\\common\\\\PrivateRoute\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport ApproveUser from '../../../Pages/ApproveUser/ApproveUser';\n\nvar PrivateRoute = function PrivateRoute(props) {\n  var Component = props.component,\n      rest = _objectWithoutProperties(props, [\"component\"]);\n\n  var PrivateRouteComponent = React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  })); //Welcome component as per 'App.js'\n\n  var RedirectComponent = React.createElement(Redirect, {\n    to: {\n      pathname: props.redirectPath,\n      state: {\n        from: props.location\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }); //Back to Login as per 'App.js'\n\n  console.log(\"props: \", props); //Conditional rendirect based on user role\n\n  if (props.UserStatus === 'P' && props.userRoleId === 4) {\n    PrivateRouteComponent = React.createElement(ApproveUser, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Route, Object.assign({\n    render: function render() {\n      return props.UserStatus === 'A' ? PrivateRouteComponent : RedirectComponent;\n    }\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    UserStatus: state.tempEdge.login !== \"\" ? state.tempEdge.login.portalUserList[0].status : null,\n    AgencyStatus: state.tempEdge.login !== \"\" ? state.tempEdge.login.portalUserList[0].organizationEntity.status : null,\n    userRoleId: state.tempEdge.login !== \"\" ? state.tempEdge.login.portalUserList[0].userRoleId : null\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:\\Users\\migue\\Documents\\Jose\\TempEdge\\tempedgereact\\tempedgereact - jose\\src\\components\\common\\PrivateRoute\\PrivateRoute.js"],"names":["React","connect","Redirect","Route","ApproveUser","PrivateRoute","props","Component","component","rest","PrivateRouteComponent","RedirectComponent","pathname","redirectPath","state","from","location","console","log","UserStatus","userRoleId","mapStateToProps","tempEdge","login","portalUserList","status","AgencyStatus","organizationEntity"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,wCAAxB;;AAEA,IAAIC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MACXC,SADW,GACYD,KADZ,CACtBE,SADsB;AAAA,MACGC,IADH,4BACYH,KADZ;;AAE5B,MAAII,qBAAqB,GAAG,oBAAC,SAAD,oBAAeJ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5B,CAF4B,CAE4B;;AACxD,MAAIK,iBAAiB,GAAG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAEN,KAAK,CAACO,YAAlB;AAAgCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAET,KAAK,CAACU;AAAd;AAAvC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAH4B,CAGkF;;AAE9GC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,KAAvB,EAL4B,CAM5B;;AACA,MAAGA,KAAK,CAACa,UAAN,KAAqB,GAArB,IAA4Bb,KAAK,CAACc,UAAN,KAAqB,CAApD,EAAsD;AACpDV,IAAAA,qBAAqB,GAAG,oBAAC,WAAD,oBAAiBJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxB;AACD;;AAED,SACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAA,aAAOA,KAAK,CAACa,UAAN,KAAqB,GAAtB,GAA6BT,qBAA7B,GAAqDC,iBAA3D;AAAA;AAAf,KAAiGF,IAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD,CAdD;;AAgBA,IAAIY,eAAe,GAAG,SAAlBA,eAAkB,CAACP,KAAD,EAAW;AAC/B,SAAM;AACJK,IAAAA,UAAU,EAAGL,KAAK,CAACQ,QAAN,CAAeC,KAAf,KAAyB,EAA1B,GAA+BT,KAAK,CAACQ,QAAN,CAAeC,KAAf,CAAqBC,cAArB,CAAoC,CAApC,EAAuCC,MAAtE,GAA8E,IADtF;AAEJC,IAAAA,YAAY,EAAGZ,KAAK,CAACQ,QAAN,CAAeC,KAAf,KAAyB,EAA1B,GAA+BT,KAAK,CAACQ,QAAN,CAAeC,KAAf,CAAqBC,cAArB,CAAoC,CAApC,EAAuCG,kBAAvC,CAA0DF,MAAzF,GAAiG,IAF3G;AAGJL,IAAAA,UAAU,EAAGN,KAAK,CAACQ,QAAN,CAAeC,KAAf,KAAyB,EAA1B,GAA+BT,KAAK,CAACQ,QAAN,CAAeC,KAAf,CAAqBC,cAArB,CAAoC,CAApC,EAAuCJ,UAAtE,GAAkF;AAH1F,GAAN;AAKD,CAND;;AAQA,eAAenB,OAAO,CAACoB,eAAD,CAAP,CAAyBhB,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport ApproveUser from '../../../Pages/ApproveUser/ApproveUser';\r\n\r\nlet PrivateRoute = (props) => {\r\n  let { component: Component, ...rest } = props;\r\n  let PrivateRouteComponent = <Component {...props} />;   //Welcome component as per 'App.js'\r\n  let RedirectComponent = <Redirect to={{ pathname: props.redirectPath, state: { from: props.location }}} />;   //Back to Login as per 'App.js'\r\n\r\n  console.log(\"props: \", props);\r\n  //Conditional rendirect based on user role\r\n  if(props.UserStatus === 'P' && props.userRoleId === 4){\r\n    PrivateRouteComponent = <ApproveUser {...props} />\r\n  }\r\n\r\n  return (\r\n    <Route render={() => (props.UserStatus === 'A') ? PrivateRouteComponent : RedirectComponent} {...rest} />\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    UserStatus: (state.tempEdge.login !== \"\")? state.tempEdge.login.portalUserList[0].status: null,\r\n    AgencyStatus: (state.tempEdge.login !== \"\")? state.tempEdge.login.portalUserList[0].organizationEntity.status: null,\r\n    userRoleId: (state.tempEdge.login !== \"\")? state.tempEdge.login.portalUserList[0].userRoleId: null\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}