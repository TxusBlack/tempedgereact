{"ast":null,"code":"import _classCallCheck from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/ForgotPassword/ForgotPassword.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { withLocalize, Translate } from 'react-localize-redux';\n\nvar ForgotPassword =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ForgotPassword, _React$Component);\n\n  function ForgotPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotPassword).call(this, props));\n\n    _this.renderInput = function (formProps) {\n      var errorClass = \"col-xs-12 \".concat(formProps.meta.error && formProps.meta.touched ? 'has-error-login login-input-error' : 'login-input');\n      return React.createElement(\"div\", {\n        className: errorClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        className: \"form-control\",\n        placeholder: formProps.placeholder\n      }, formProps.input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), \"      \", _this.renderError(formProps));\n    };\n\n    _this.addTranslationsForActiveLanguage();\n\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.history.location.pathname = \"/resetpassword/\".concat(this.props.activeLanguage.code);\n      this.props.history.push(\"/resetpassword/\".concat(this.props.activeLanguage.code));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      console.log(\"ForgotPassword UPDATED!\");\n      var hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n      if (hasActiveLanguageChanged) {\n        this.props.params.lang = this.props.activeLanguage.code;\n        this.props.history.location.pathname = \"/resetpassword/\".concat(this.props.activeLanguage.code);\n        this.props.history.push(\"/resetpassword/\".concat(this.props.activeLanguage.code));\n        this.addTranslationsForActiveLanguage();\n      }\n    }\n  }, {\n    key: \"addTranslationsForActiveLanguage\",\n    value: function addTranslationsForActiveLanguage() {\n      var _this2 = this;\n\n      var activeLanguage = this.props.activeLanguage;\n\n      if (!activeLanguage) {\n        return;\n      }\n\n      import(\"../../translations/\".concat(activeLanguage.code, \".tempedge.json\")).then(function (translations) {\n        _this2.props.addTranslationForLanguage(translations, activeLanguage.code);\n      });\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError(formProps) {\n      var fieldId = '';\n      var errMsg = '';\n\n      if (typeof formProps.input !== 'undefined') {\n        fieldId = \"com.tempedge.msg.label.\".concat(formProps.input.name, \"required\");\n        errMsg = formProps.meta.error;\n\n        if (formProps.meta.touched && formProps.meta.error && typeof errMsg !== 'undefined') {\n          return React.createElement(\"p\", {\n            style: {\n              color: '#a94442'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(Translate, {\n            id: fieldId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, errMsg));\n        }\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formValues) {\n      console.log(formValues);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"ForgotPassword!\");\n      return React.createElement(\"div\", {\n        className: \"container-fluid login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 col-md-offset-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.forgotpassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Forgot Pasword\")), React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.resetpasswordlink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Password reset link will be sent to your email.\")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"forgotpassword\",\n        type: \"email\",\n        placeholder: \"Your email address\",\n        component: function component(formProps) {\n          return _this3.renderInput(formProps);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        disabled: this.props.invalid || this.props.submiting || this.props.pristine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.send\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Send\"))))))));\n    }\n  }]);\n\n  return ForgotPassword;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.forgotpassword) {\n    errors.forgotpassword = 'Please enter your email';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formValues.forgotpassword)) {\n    errors.forgotpassword = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nexport default withLocalize(reduxForm({\n  form: 'forgotpassword',\n  validate: validate\n})(ForgotPassword));","map":{"version":3,"sources":["/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/ForgotPassword/ForgotPassword.js"],"names":["React","connect","Field","reduxForm","withLocalize","Translate","ForgotPassword","props","renderInput","formProps","errorClass","meta","error","touched","placeholder","input","renderError","addTranslationsForActiveLanguage","history","location","pathname","activeLanguage","code","push","prevProps","prevState","console","log","hasActiveLanguageChanged","params","lang","then","translations","addTranslationForLanguage","fieldId","errMsg","name","color","formValues","handleSubmit","onSubmit","invalid","submiting","pristine","Component","validate","errors","forgotpassword","test","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { withLocalize, Translate } from 'react-localize-redux';\n\nclass ForgotPassword extends React.Component{\n  constructor(props) {\n    super(props);\n\n    this.addTranslationsForActiveLanguage();\n  }\n\n  componentWillMount(){\n    this.props.history.location.pathname = `/resetpassword/${this.props.activeLanguage.code}`;\n    this.props.history.push(`/resetpassword/${this.props.activeLanguage.code}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"ForgotPassword UPDATED!\");\n    const hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n    if (hasActiveLanguageChanged) {\n      this.props.params.lang = this.props.activeLanguage.code;\n      this.props.history.location.pathname = `/resetpassword/${this.props.activeLanguage.code}`;\n      this.props.history.push(`/resetpassword/${this.props.activeLanguage.code}`);\n      this.addTranslationsForActiveLanguage();\n    }\n  }\n\n  addTranslationsForActiveLanguage() {\n    const {activeLanguage} = this.props;\n\n    if (!activeLanguage) {\n      return;\n    }\n\n    import(`../../translations/${activeLanguage.code}.tempedge.json`)\n      .then(translations => {\n        this.props.addTranslationForLanguage(translations, activeLanguage.code)\n      });\n  }\n\n  renderError(formProps){\n    let fieldId='';\n    let errMsg = '';\n\n    if(typeof formProps.input !== 'undefined'){\n      fieldId = `com.tempedge.msg.label.${formProps.input.name}required`;\n      errMsg = formProps.meta.error;\n\n      if(formProps.meta.touched && formProps.meta.error && typeof errMsg !== 'undefined'){\n        return(\n          <p style={{color: '#a94442'}}><Translate id={fieldId}>{errMsg}</Translate></p>\n        );\n      }\n    }\n  }\n\n  renderInput = (formProps) => {\n    let errorClass = `col-xs-12 ${(formProps.meta.error && formProps.meta.touched)? 'has-error-login login-input-error': 'login-input'}`;\n\n    return(\n      <div className={errorClass}>\n        <input className=\"form-control\" placeholder={formProps.placeholder} {...formProps.input} autoComplete=\"off\" />      {/*<input onChange={formProps.input.onChange} value={formProps.input.value} />*/}\n        {this.renderError(formProps)}\n      </div>\n    );\n  }\n\n  onSubmit(formValues){\n    console.log(formValues);\n  }\n\n  render(){\n    console.log(\"ForgotPassword!\");\n    return(\n      <div className=\"container-fluid login-container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 col-md-offset-3\">\n            <div className=\"login-form\">\n              <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                  <h2 className=\"text-center\"><Translate id=\"com.tempedge.msg.label.forgotpassword\">Forgot Pasword</Translate></h2>\n                  <p className=\"text-center\"><Translate id=\"com.tempedge.msg.label.resetpasswordlink\">Password reset link will be sent to your email.</Translate></p>\n                  <div className=\"form-group\">\n                    <Field name=\"forgotpassword\" type=\"email\" placeholder=\"Your email address\" component={(formProps) => this.renderInput(formProps)} />\n                  </div>\n                  <div className=\"form-group\">\n                      <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={this.props.invalid || this.props.submiting || this.props.pristine}><Translate id=\"com.tempedge.msg.label.send\">Send</Translate></button>\n                  </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet validate = (formValues) => {\n  let errors ={};\n\n  if (!formValues.forgotpassword) {\n      errors.forgotpassword = 'Please enter your email'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formValues.forgotpassword)) {\n      errors.forgotpassword = 'Invalid email address'\n  }\n\n  return errors;\n}\n\nexport default withLocalize(reduxForm({\n  form: 'forgotpassword',\n  validate: validate\n})(ForgotPassword));\n"]},"metadata":{},"sourceType":"module"}