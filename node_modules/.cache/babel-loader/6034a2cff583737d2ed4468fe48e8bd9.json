{"ast":null,"code":"import _classCallCheck from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport Validators from 'redux-form-validators';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport { setActivePage } from '../../Redux/actions/tempEdgeActions';\nimport ReCaptcha from \"react-google-recaptcha\";\nimport keys from '../../apiKeys/keys';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props, context) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props, context));\n    _this.state = {\n      reCaptchaToken: '',\n      btnDisabled: true\n    };\n\n    _this.renderInput = function (formProps) {\n      var errorClass = \"col-xs-12 \".concat(formProps.meta.error && formProps.meta.touched ? 'has-error-login login-input-error' : 'login-input');\n      return React.createElement(\"div\", {\n        className: errorClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        className: \"form-control login-input-box\",\n        placeholder: formProps.placeholder\n      }, formProps.input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), \"      \", _this.renderError(formProps));\n    };\n\n    _this.onChange = function (recaptchaToken) {\n      console.log(\"recaptchaToken: \", recaptchaToken);\n\n      _this.setState({\n        reCaptchaToken: recaptchaToken,\n        btnDisabled: false\n      }, function () {\n        console.log(\"this.state.btnDisabled: \", _this.state.btnDisabled);\n      });\n    };\n\n    _this.renderReCaptcha = function (formProps) {\n      var errorClass = \"col-xs-12 \".concat(formProps.meta.error && formProps.meta.touched ? 'has-error-login login-input-error' : 'captcha');\n      return React.createElement(\"div\", {\n        className: errorClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(ReCaptcha, {\n        ref: function ref(_ref) {\n          _this.captcha = _ref;\n        },\n        size: formProps.size,\n        height: formProps.height,\n        theme: formProps.theme,\n        sitekey: keys.RECAPTCHA_SITE_KEY,\n        onChange: _this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }));\n    };\n\n    _this.addTranslationsForActiveLanguage();\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.history.location.pathname = \"/auth/\".concat(this.props.activeLanguage.code);\n      this.props.history.push(\"/auth/\".concat(this.props.activeLanguage.code));\n      this.props.setActivePage(\"auth\");\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n      if (hasActiveLanguageChanged) {\n        this.props.params.lang = this.props.activeLanguage.code;\n        this.props.history.location.pathname = \"/auth/\".concat(this.props.activeLanguage.code);\n        this.props.history.push(\"/auth/\".concat(this.props.activeLanguage.code));\n        this.addTranslationsForActiveLanguage();\n      }\n    }\n  }, {\n    key: \"addTranslationsForActiveLanguage\",\n    value: function addTranslationsForActiveLanguage() {\n      var _this2 = this;\n\n      var activeLanguage = this.props.activeLanguage;\n\n      if (!activeLanguage) {\n        return;\n      }\n\n      import(\"../../translations/\".concat(activeLanguage.code, \".tempedge.json\")).then(function (translations) {\n        _this2.props.addTranslationForLanguage(translations, activeLanguage.code);\n      });\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError(formProps) {\n      var fieldId = '';\n      var errMsg = '';\n\n      if (typeof formProps.input !== 'undefined') {\n        fieldId = \"com.tempedge.error.person.\".concat(formProps.input.name, \"required\");\n        errMsg = formProps.meta.error;\n\n        if (formProps.meta.touched && formProps.meta.error && typeof errMsg !== 'undefined') {\n          return React.createElement(\"p\", {\n            style: {\n              color: '#a94442'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, React.createElement(Translate, {\n            id: fieldId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, errMsg));\n        }\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formValues) {\n      console.log(formValues); //this.captcha.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var forgotPasswordRoute = \"/resetpassword/\".concat(this.props.params.lang);\n      var registerRoute = \"/register/\".concat(this.props.params.lang);\n      return React.createElement(\"div\", {\n        className: \"container-fluid login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card login-form-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header login-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Sign In\"))), React.createElement(\"form\", {\n        className: \"card-body\",\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-left label-p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Field, {\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"Enter username\",\n        component: this.renderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-left label-p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Field, {\n        name: \"password\",\n        type: \"text\",\n        placeholder: \"Enter password\",\n        component: this.renderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"clearfix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"pull-left checkbox-inline label-p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"rememberme\",\n        id: \"rememberme\",\n        component: \"input\",\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          marginLeft: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.remember_me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Remember me\"))), React.createElement(Link, {\n        to: forgotPasswordRoute,\n        className: \"pull-right forgot-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.password_retrieve\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Forgot Password?\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        disabled: this.props.invalid || this.props.submiting || this.props.pristine || this.state.btnDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Sign In\")))), React.createElement(\"div\", {\n        className: \"card-footer login-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-right no-account-query\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Don't have an account?\"), React.createElement(\"span\", {\n        className: \"text-right register-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"create-account\",\n        to: registerRoute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.create_account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Create Account\"))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center-block captcha-panel\",\n        style: {\n          width: \"304px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"captcha\",\n        size: \"normal\",\n        height: \"130px\",\n        theme: \"light\",\n        component: this.renderReCaptcha,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.username) {\n    errors.username = 'Please enter your username.';\n  }\n\n  if (!formValues.password) {\n    errors.password = 'Please enter your password.';\n  }\n\n  return errors;\n};\n\nLogin.propTypes = {\n  setActivePage: PropTypes.func.isRequired //Current REDUX state\n\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    activePage: state.tempEdge.active_page\n  };\n};\n\nLogin = reduxForm({\n  form: 'login',\n  validate: validate\n})(Login);\nexport default withLocalize(connect(mapStateToProps, {\n  setActivePage: setActivePage\n})(Login));","map":{"version":3,"sources":["/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/Login/Login.js"],"names":["React","Component","Link","connect","PropTypes","Field","reduxForm","Validators","withLocalize","Translate","setActivePage","ReCaptcha","keys","Login","props","context","state","reCaptchaToken","btnDisabled","renderInput","formProps","errorClass","meta","error","touched","placeholder","input","renderError","onChange","recaptchaToken","console","log","setState","renderReCaptcha","ref","captcha","size","height","theme","RECAPTCHA_SITE_KEY","addTranslationsForActiveLanguage","history","location","pathname","activeLanguage","code","push","prevProps","prevState","hasActiveLanguageChanged","params","lang","then","translations","addTranslationForLanguage","fieldId","errMsg","name","color","formValues","forgotPasswordRoute","registerRoute","handleSubmit","onSubmit","marginLeft","invalid","submiting","pristine","width","validate","errors","username","password","propTypes","func","isRequired","mapStateToProps","activePage","tempEdge","active_page","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport Validators from 'redux-form-validators';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport  { setActivePage } from '../../Redux/actions/tempEdgeActions';\nimport ReCaptcha from \"react-google-recaptcha\";\nimport keys from '../../apiKeys/keys';\n\nclass Login extends Component{\n  constructor(props, context) {\n    super(props, context);\n\n    this.addTranslationsForActiveLanguage();\n  }\n\n  state = { reCaptchaToken: '', btnDisabled: true }\n\n  componentDidMount(){\n    this.props.history.location.pathname = `/auth/${this.props.activeLanguage.code}`;\n    this.props.history.push(`/auth/${this.props.activeLanguage.code}`);\n    this.props.setActivePage(\"auth\");\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n    if (hasActiveLanguageChanged) {\n      this.props.params.lang = this.props.activeLanguage.code;\n      this.props.history.location.pathname = `/auth/${this.props.activeLanguage.code}`;\n      this.props.history.push(`/auth/${this.props.activeLanguage.code}`);\n      this.addTranslationsForActiveLanguage();\n    }\n  }\n\n  addTranslationsForActiveLanguage() {\n    const {activeLanguage} = this.props;\n\n    if (!activeLanguage) {\n      return;\n    }\n\n    import(`../../translations/${activeLanguage.code}.tempedge.json`)\n      .then(translations => {\n        this.props.addTranslationForLanguage(translations, activeLanguage.code)\n      });\n  }\n\n  renderError(formProps){\n    let fieldId='';\n    let errMsg = '';\n\n    if(typeof formProps.input !== 'undefined'){\n      fieldId = `com.tempedge.error.person.${formProps.input.name}required`;\n      errMsg = formProps.meta.error;\n\n      if(formProps.meta.touched && formProps.meta.error && typeof errMsg !== 'undefined'){\n        return(\n          <p style={{color: '#a94442'}}><Translate id={fieldId}>{errMsg}</Translate></p>\n        );\n      }\n    }\n  }\n\n  renderInput = (formProps) => {\n    let errorClass = `col-xs-12 ${(formProps.meta.error && formProps.meta.touched)? 'has-error-login login-input-error': 'login-input'}`;\n\n    return(\n      <div className={errorClass}>\n        <input className=\"form-control login-input-box\" placeholder={formProps.placeholder} {...formProps.input} autoComplete=\"off\" />      {/*<input onChange={formProps.input.onChange} value={formProps.input.value} />*/}\n        {this.renderError(formProps)}\n      </div>\n    );\n  }\n\n  onChange = (recaptchaToken) => {\n    console.log(\"recaptchaToken: \", recaptchaToken);\n\n    this.setState({\n      reCaptchaToken: recaptchaToken,\n      btnDisabled: false\n    }, () => {\n      console.log(\"this.state.btnDisabled: \", this.state.btnDisabled);\n    })\n  }\n\n  renderReCaptcha = (formProps) => {\n    let errorClass = `col-xs-12 ${(formProps.meta.error && formProps.meta.touched)? 'has-error-login login-input-error': 'captcha'}`;\n\n    return(\n      <div className={errorClass}>\n        <ReCaptcha\n            ref={(ref) => {this.captcha = ref;}}\n            size={formProps.size}\n            height={formProps.height}\n            theme={formProps.theme}\n            sitekey={keys.RECAPTCHA_SITE_KEY}\n            onChange={this.onChange}\n        />\n      </div>\n    );\n  }\n\n  onSubmit(formValues){\n    console.log(formValues);\n    //this.captcha.reset();\n  }\n\n  render(){\n    let forgotPasswordRoute = `/resetpassword/${this.props.params.lang}`;\n    let registerRoute = `/register/${this.props.params.lang}`;\n\n    return(\n      <div className=\"container-fluid login-container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"login-form\">\n              <div className=\"card login-form-panel\">\n                <div className=\"card-header login-header\">\n                  <h2 className=\"text-center\"><Translate id=\"com.tempedge.msg.label.login\">Sign In</Translate></h2>\n                </div>\n                <form className=\"card-body\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <div className=\"form-group\">\n                      <p className=\"text-left label-p\">Username</p>\n                      <Field name=\"username\" type=\"text\" placeholder=\"Enter username\" component={this.renderInput} />\n                    </div>\n                    <div className=\"form-group\">\n                      <p className=\"text-left label-p\">Password</p>\n                      <Field name=\"password\" type=\"text\" placeholder=\"Enter password\" component={this.renderInput} />\n                    </div>\n                    <div className=\"clearfix\">\n                        <label className=\"pull-left checkbox-inline label-p\">\n                          <Field name=\"rememberme\" id=\"rememberme\" component=\"input\" type=\"checkbox\"/>\n                          <span style={{marginLeft: 4}}><Translate id=\"com.tempedge.msg.label.remember_me\">Remember me</Translate></span>\n                        </label>\n                        <Link to={forgotPasswordRoute} className=\"pull-right forgot-password\"><Translate id=\"com.tempedge.msg.label.password_retrieve\">Forgot Password?</Translate></Link>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={this.props.invalid || this.props.submiting || this.props.pristine || this.state.btnDisabled}><Translate id=\"com.tempedge.msg.label.login\">Sign In</Translate></button>\n                    </div>\n                </form>\n                <div className=\"card-footer login-footer\">\n                  <span className=\"text-right no-account-query\">Don't have an account?</span>\n                  <span className=\"text-right register-link\"><Link className=\"create-account\" to={registerRoute}><Translate id=\"com.tempedge.msg.label.create_account\">Create Account</Translate></Link></span>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"center-block captcha-panel\" style={{width: \"304px\"}}>\n                    <Field name='captcha' size=\"normal\" height=\"130px\" theme=\"light\" component={this.renderReCaptcha} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet validate = (formValues) => {\n  let errors = {};\n\n  if(!formValues.username){\n    errors.username = 'Please enter your username.';\n  }\n\n  if(!formValues.password){\n    errors.password = 'Please enter your password.';\n  }\n\n  return errors;\n}\n\nLogin.propTypes = {\n  setActivePage: PropTypes.func.isRequired\n}\n                      //Current REDUX state\nlet mapStateToProps = (state) => {\n  return({\n    activePage: state.tempEdge.active_page\n  });\n}\n\nLogin = reduxForm({\n  form: 'login',\n  validate: validate\n})(Login);\n\nexport default withLocalize(connect(mapStateToProps, { setActivePage })(Login));\n"]},"metadata":{},"sourceType":"module"}