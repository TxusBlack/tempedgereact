{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Axios from 'axios';\nimport FormData from 'form-data'; //let baseUrlTempEdge = `http://localhost:8080`;\n\nvar baseUrlTempEdge = \"http://96.56.31.162:9191\";\nvar baseUrlFaceRecognition = \"http://localhost:9191\";\n\nfunction dataURLtoFile(dataurl, filename) {\n  var arr = dataurl.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n\n  return new File([u8arr], filename, {\n    type: mime\n  });\n}\n\nvar HttpService = {\n  getList: function () {\n    var _getList = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(url) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"url: \", baseUrlTempEdge + url);\n              _context.next = 3;\n              return Axios({\n                url: baseUrlTempEdge + url,\n                method: 'post',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                data: {\n                  \"IPAddress\": \"10.1.1.1\"\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function getList(_x) {\n      return _getList.apply(this, arguments);\n    }\n\n    return getList;\n  }(),\n  postCreateNew: function () {\n    var _postCreateNew = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(url, data) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Axios({\n                url: baseUrlTempEdge + url,\n                method: 'post',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                data: data\n              });\n\n            case 2:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function postCreateNew(_x2, _x3) {\n      return _postCreateNew.apply(this, arguments);\n    }\n\n    return postCreateNew;\n  }(),\n  getAuthToken: function () {\n    var _getAuthToken = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(url, data) {\n      var bodyFormData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              //FR y TempEdge\n              bodyFormData = new FormData();\n              bodyFormData.set('username', data.username);\n              bodyFormData.set('password', data.password);\n              bodyFormData.set('grant_type', data.grant_type); // bodyFormData.set('role', data.role);\n\n              return _context3.abrupt(\"return\", Axios.post(baseUrlTempEdge + url, bodyFormData, {\n                headers: {\n                  'Authorization': \"Basic \" + btoa(\"Luis-client\" + \":\" + \"Luis-password\")\n                }\n              }));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function getAuthToken(_x4, _x5) {\n      return _getAuthToken.apply(this, arguments);\n    }\n\n    return getAuthToken;\n  }(),\n  postImages: function () {\n    var _postImages = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(url, data) {\n      var bodyFormData, newArray, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              bodyFormData = new FormData();\n              _context4.next = 3;\n              return data.map(function (img, index) {\n                var file = dataURLtoFile(img, \"user-\".concat(index, \".jpeg\"));\n                bodyFormData.append('file', file);\n              });\n\n            case 3:\n              newArray = _context4.sent;\n              bodyFormData.append('empId', \"60\"); // bodyFormData.set('role', \"ADMIN\");\n\n              _context4.next = 7;\n              return Axios({\n                method: 'post',\n                url: baseUrlFaceRecognition + url,\n                data: bodyFormData,\n                config: {\n                  headers: {\n                    'Content-Type': 'multipart/form-data'\n                  }\n                },\n                params: {\n                  access_token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NTU2MzcwMjEsInVzZXJfbmFtZSI6ImFkbWluIiwiYXV0aG9yaXRpZXMiOlsiUk9MRV9BRE1JTiJdLCJqdGkiOiI4NzkwZTgyYi1kZTUyLTQyM2ItYjg1OC03MWRjZGMyNDNiZjMiLCJjbGllbnRfaWQiOiJMdWlzLWNsaWVudCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSIsInRydXN0Il19.84RitXDEV4MhAlGpQVoqSmM6HvziYL-k2OZrbg5cyp8\"\n                }\n              });\n\n            case 7:\n              response = _context4.sent;\n              return _context4.abrupt(\"return\", response);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function postImages(_x6, _x7) {\n      return _postImages.apply(this, arguments);\n    }\n\n    return postImages;\n  }(),\n  postImage: function () {\n    var _postImage = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(url, data) {\n      var file, bodyFormData, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              file = dataURLtoFile(data, \"snapshot-\".concat(1, \".jpg\"));\n              bodyFormData = new FormData();\n              bodyFormData.append(\"file\", file);\n              bodyFormData.append('empIds', [\"60\"]);\n              _context5.next = 6;\n              return Axios({\n                method: 'post',\n                url: baseUrlFaceRecognition + url,\n                data: bodyFormData,\n                config: {\n                  headers: {\n                    'Content-Type': 'multipart/form-data'\n                  }\n                },\n                params: {\n                  access_token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NTU2MzcwMjEsInVzZXJfbmFtZSI6ImFkbWluIiwiYXV0aG9yaXRpZXMiOlsiUk9MRV9BRE1JTiJdLCJqdGkiOiI4NzkwZTgyYi1kZTUyLTQyM2ItYjg1OC03MWRjZGMyNDNiZjMiLCJjbGllbnRfaWQiOiJMdWlzLWNsaWVudCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSIsInRydXN0Il19.84RitXDEV4MhAlGpQVoqSmM6HvziYL-k2OZrbg5cyp8\"\n                }\n              });\n\n            case 6:\n              response = _context5.sent;\n              return _context5.abrupt(\"return\", response);\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function postImage(_x8, _x9) {\n      return _postImage.apply(this, arguments);\n    }\n\n    return postImage;\n  }()\n};\nexport default HttpService;","map":{"version":3,"sources":["C:\\Users\\migue\\Documents\\Jose\\TempEdge\\tempedgereact\\src\\utils\\services\\httpService\\httpService.js"],"names":["Axios","FormData","baseUrlTempEdge","baseUrlFaceRecognition","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","HttpService","getList","url","console","log","method","headers","data","response","postCreateNew","getAuthToken","bodyFormData","set","username","password","grant_type","post","btoa","postImages","map","img","index","file","append","newArray","config","params","access_token","postImage"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport FormData from 'form-data'\r\n\r\n//let baseUrlTempEdge = `http://localhost:8080`;\r\nlet baseUrlTempEdge = `http://96.56.31.162:9191`;\r\nlet baseUrlFaceRecognition = `http://localhost:9191`;\r\n\r\nfunction dataURLtoFile(dataurl, filename) {\r\n  var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n    bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n  while(n--){\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\nlet HttpService = {\r\n  getList: async (url) => {\r\n    console.log(\"url: \", baseUrlTempEdge + url);\r\n\r\n    let response = await Axios({\r\n      url: baseUrlTempEdge + url,\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data: {\r\n        \"IPAddress\" : \"10.1.1.1\"\r\n      }\r\n    });\r\n\r\n    return response;\r\n  },\r\n  postCreateNew: async (url, data) => {     //Create New User, Agency & others\r\n    let response = await Axios({\r\n      url: baseUrlTempEdge + url,\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data: data\r\n    });\r\n\r\n    return response;\r\n  },\r\n  getAuthToken: async(url, data) => {      //FR y TempEdge\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.set('username', data.username);\r\n    bodyFormData.set('password', data.password);\r\n    bodyFormData.set('grant_type', data.grant_type);\r\n    // bodyFormData.set('role', data.role);\r\n\r\n    return Axios.post( (baseUrlTempEdge + url), bodyFormData, {\r\n      headers: {\r\n          'Authorization': \"Basic \" + btoa(\"Luis-client\"+\":\"+\"Luis-password\")\r\n      }\r\n    });\r\n  },\r\n  postImages: async (url, data) => {\r\n    var bodyFormData = new FormData();\r\n\r\n    let newArray = await data.map( (img, index) => {\r\n      let file = dataURLtoFile(img, `user-${index}.jpeg`);\r\n      bodyFormData.append('file', file);\r\n    });\r\n\r\n    bodyFormData.append('empId', \"60\");\r\n    // bodyFormData.set('role', \"ADMIN\");\r\n\r\n    let response = await Axios({\r\n      method: 'post',\r\n      url: baseUrlFaceRecognition + url,\r\n      data: bodyFormData,\r\n      config: {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      },\r\n      params: {\r\n        access_token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NTU2MzcwMjEsInVzZXJfbmFtZSI6ImFkbWluIiwiYXV0aG9yaXRpZXMiOlsiUk9MRV9BRE1JTiJdLCJqdGkiOiI4NzkwZTgyYi1kZTUyLTQyM2ItYjg1OC03MWRjZGMyNDNiZjMiLCJjbGllbnRfaWQiOiJMdWlzLWNsaWVudCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSIsInRydXN0Il19.84RitXDEV4MhAlGpQVoqSmM6HvziYL-k2OZrbg5cyp8\"\r\n      }\r\n    });\r\n\r\n    return response;\r\n  },\r\n  postImage: async (url, data) => {\r\n    let file = dataURLtoFile(data, `snapshot-${1}.jpg`);\r\n\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.append(\"file\",file);\r\n    bodyFormData.append('empIds', [\"60\"]);\r\n\r\n    let response = await Axios({\r\n      method: 'post',\r\n      url: baseUrlFaceRecognition + url,\r\n      data: bodyFormData,\r\n      config: {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      },\r\n      params: {\r\n        access_token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NTU2MzcwMjEsInVzZXJfbmFtZSI6ImFkbWluIiwiYXV0aG9yaXRpZXMiOlsiUk9MRV9BRE1JTiJdLCJqdGkiOiI4NzkwZTgyYi1kZTUyLTQyM2ItYjg1OC03MWRjZGMyNDNiZjMiLCJjbGllbnRfaWQiOiJMdWlzLWNsaWVudCIsInNjb3BlIjpbInJlYWQiLCJ3cml0ZSIsInRydXN0Il19.84RitXDEV4MhAlGpQVoqSmM6HvziYL-k2OZrbg5cyp8\"\r\n      }\r\n    });\r\n\r\n    return response;\r\n  }\r\n}\r\n\r\nexport default HttpService;\r\n"]},"metadata":{},"sourceType":"module"}