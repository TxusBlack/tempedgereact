{"ast":null,"code":"import _regeneratorRuntime from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/Login/CreateNewAgency/WizardCreateNewAgencyThirdPage.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Field, FieldArray, reduxForm, formValueSelector } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport { setActivePage } from '../../../Redux/actions/tempEdgeActions';\nvar $ = window.$;\nvar selector = formValueSelector('CreateNewAgency');\n\nvar WizardCreateNewAgencyThirdPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WizardCreateNewAgencyThirdPage, _Component);\n\n  function WizardCreateNewAgencyThirdPage(props) {\n    var _this;\n\n    _classCallCheck(this, WizardCreateNewAgencyThirdPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WizardCreateNewAgencyThirdPage).call(this, props));\n    _this.state = {\n      mounted: false,\n      phonelabels: ''\n    };\n\n    _this.renderPhoneNumberInputs = function (formProps) {\n      var errorClass = \"col-xs-10 \".concat(formProps.meta.error && formProps.meta.touched ? 'has-error' : '');\n      var recruitment_office = formProps.label.split(\" \");\n\n      if (_this.props.activeLanguage.code === 'en') {\n        recruitment_office[0] = recruitment_office[0] === 'OfficeName' ? 'Office Name' : '';\n      } else if (_this.props.activeLanguage.code === 'es') {\n        recruitment_office[0] = recruitment_office[0] === 'NombredeOficina' ? 'Nombre de Oficina' : '';\n      }\n\n      if (formProps.fields.length < 1) {\n        formProps.fields.push({});\n      }\n\n      var block = formProps.fields.map(function (recruitmentOffice, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          className: \"agency-phone-li\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, index > 0 ? React.createElement(\"button\", {\n          type: \"button\",\n          className: \"pull-right phone-num-btn-close\",\n          title: \"Remove Agency\",\n          onClick: function onClick() {\n            return formProps.fields.remove(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"X\") : ''), React.createElement(Field, {\n          name: \"\".concat(recruitmentOffice, \".officeName\"),\n          type: \"text\",\n          placeholder: \"Office Name\",\n          index: index,\n          label: recruitment_office[0],\n          component: _this.renderInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), React.createElement(Field, {\n          name: \"\".concat(recruitmentOffice, \".address\"),\n          type: \"text\",\n          placeholder: \"Address\",\n          index: index,\n          label: recruitment_office[1],\n          component: _this.renderInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), React.createElement(Field, {\n          name: \"\".concat(recruitmentOffice, \".city\"),\n          type: \"text\",\n          placeholder: \"City\",\n          index: index,\n          label: recruitment_office[2],\n          component: _this.renderInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), React.createElement(Field, {\n          name: \"\".concat(recruitmentOffice, \".phonenumber\"),\n          type: \"text\",\n          placeholder: \"xxx-xxx-xxxx\",\n          index: index,\n          label: recruitment_office[3],\n          component: _this.renderInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }));\n      });\n      var addBtn = React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"center-block\",\n        onClick: function onClick() {\n          return formProps.fields.push({});\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Add a New Recruitment Office\")));\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"clearfix recruiting-office-phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"pull-left checkbox-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.recruitingoffice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Recruiting Office\")), React.createElement(Field, {\n        name: \"recruitingofficecheckbox\",\n        id: \"recruitingoffice\",\n        component: \"input\",\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, !_this.props.checkbox || typeof _this.props.checkbox === 'undefined' ? block : '', !_this.props.checkbox || typeof _this.props.checkbox === 'undefined' ? addBtn : ''));\n    };\n\n    _this.renderInput = function (formProps) {\n      var errorClass = \"col-xs-10 \".concat(formProps.meta.error && formProps.meta.touched ? 'has-error' : '');\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row agency-phone-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, formProps.label), React.createElement(\"div\", {\n        className: errorClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        className: \"form-control\",\n        placeholder: formProps.placeholder\n      }, formProps.input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), _this.renderError(formProps))));\n    };\n\n    _this.addTranslationsForActiveLanguage();\n\n    return _this;\n  }\n\n  _createClass(WizardCreateNewAgencyThirdPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        mounted: true\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n      if (hasActiveLanguageChanged) {\n        this.props.params.lang = this.props.activeLanguage.code;\n        this.props.history.location.pathname = \"/registerAgency/\".concat(this.props.activeLanguage.code);\n        this.props.history.push(\"/registerAgency/\".concat(this.props.activeLanguage.code));\n        this.addTranslationsForActiveLanguage();\n      }\n    }\n  }, {\n    key: \"addTranslationsForActiveLanguage\",\n    value: function addTranslationsForActiveLanguage() {\n      var _this2 = this;\n\n      var activeLanguage = this.props.activeLanguage;\n\n      if (!activeLanguage) {\n        return;\n      }\n\n      import(\"../../../translations/\".concat(activeLanguage.code, \".tempedge.json\")).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(translations) {\n          var phonelabel;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _this2.props.addTranslationForLanguage(translations, activeLanguage.code);\n\n                case 2:\n                  phonelabel = $(ReactDOM.findDOMNode(_this2.refs.phonelabel)).text();\n\n                  if (_this2.state.mounted && phonelabel != '') {\n                    _this2.setState({\n                      phonelabels: phonelabel\n                    });\n                  }\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError(formProps) {\n      var fieldId = '';\n\n      if (typeof formProps.input !== 'undefined') {\n        if (formProps.index != null || typeof formProps.index != 'undefined' || formProps.index != '') {\n          if (formProps.input.name.indexOf(\"recruitmentofficephonenumbers\") !== -1) {\n            if (formProps.input.name.indexOf(\"officeName\") !== -1) {\n              fieldId = \"com.tempedge.error.recruitmentoffice.recruitmentofficephonenumbers.officeNamerequired\";\n            } else if (formProps.input.name.indexOf(\"address\") !== -1) {\n              fieldId = \"com.tempedge.error.recruitmentoffice.recruitmentofficephonenumbers.addressrequired\";\n            } else if (formProps.input.name.indexOf(\"city\") !== -1) {\n              fieldId = \"com.tempedge.error.recruitmentoffice.recruitmentofficephonenumbers.cityrequired\";\n            } else if (formProps.input.name.indexOf(\"phonenumber\") !== -1) {\n              fieldId = \"com.tempedge.error.recruitmentoffice.recruitmentofficephonenumbers.phonenumberrequired\";\n            }\n          }\n        }\n\n        if (formProps.meta.touched && formProps.meta.error && typeof formProps.meta.error !== 'undefined') {\n          return React.createElement(\"p\", {\n            style: {\n              color: '#a94442'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(Translate, {\n            id: fieldId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, formProps.meta.error));\n        }\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formValues) {\n      console.log(formValues);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"Third Page\");\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.newagency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"New Agency\")), React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.props.onSubmit),\n        className: \"form-horizontal center-block register-form\",\n        style: {\n          width: \"40%\",\n          padding: \"30px 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"translation-placeholder\",\n        ref: \"phonelabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.recruitmentofficephonenumbers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Office Name Address City Phone\")), React.createElement(FieldArray, {\n        name: \"recruitmentofficephonenumbers\",\n        type: \"text\",\n        placeholder: \"Phone Number\",\n        label: this.state.phonelabels,\n        component: this.renderPhoneNumberInputs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group prev-next-btns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4 col-md-offset-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-block register-save-btn previous\",\n        onClick: this.props.previousPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Previous\")), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block register-save-btn next\",\n        disabled: this.props.invalid || this.props.pristine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Next\"))))));\n    }\n  }]);\n\n  return WizardCreateNewAgencyThirdPage;\n}(Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.recruitmentofficephonenumbers || !formValues.recruitmentofficephonenumbers.length) {\n    errors.recruitmentofficephonenumbers = {\n      _error: 'At least one recruitment office phone number must be entered.'\n    };\n  } else {\n    var recruitmentofficephonenumbersArrayErrors = [];\n    formValues.recruitmentofficephonenumbers.forEach(function (recruitmentoffice, index) {\n      var recruitmentofficephonenumbersErrors = {};\n      var regX = new RegExp(/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]*$/g);\n\n      if (!regX.test(recruitmentoffice.phonenumber)) {\n        recruitmentofficephonenumbersErrors.phonenumber = 'Enter the recruitment office phone number.';\n      }\n\n      if (!recruitmentoffice.officeName) {\n        recruitmentofficephonenumbersErrors.officeName = 'Enter the recruitment office name.';\n      }\n\n      if (!recruitmentoffice.address) {\n        recruitmentofficephonenumbersErrors.address = 'Enter the recruitment office address.';\n      }\n\n      if (!recruitmentoffice.city) {\n        recruitmentofficephonenumbersErrors.city = \"Enter the recruitment office city.\";\n      }\n\n      recruitmentofficephonenumbersArrayErrors[index] = recruitmentofficephonenumbersErrors;\n    });\n\n    if (recruitmentofficephonenumbersArrayErrors.length) {\n      errors.recruitmentofficephonenumbers = recruitmentofficephonenumbersArrayErrors;\n    }\n  }\n\n  return errors;\n};\n\nWizardCreateNewAgencyThirdPage.propTypes = {\n  setActivePage: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    activePage: state.tempEdge.active_page\n  };\n};\n\nWizardCreateNewAgencyThirdPage = reduxForm({\n  form: 'CreateNewAgency',\n  destroyOnUnmount: false,\n  validate: validate\n})(WizardCreateNewAgencyThirdPage);\nWizardCreateNewAgencyThirdPage = connect(function (state) {\n  return {\n    checkbox: selector(state, 'recruitingofficecheckbox')\n  };\n})(WizardCreateNewAgencyThirdPage);\nexport default withLocalize(connect(mapStateToProps, {\n  setActivePage: setActivePage\n})(WizardCreateNewAgencyThirdPage));","map":{"version":3,"sources":["/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/Login/CreateNewAgency/WizardCreateNewAgencyThirdPage.js"],"names":["React","Component","ReactDOM","Field","FieldArray","reduxForm","formValueSelector","PropTypes","connect","withLocalize","Translate","setActivePage","$","window","selector","WizardCreateNewAgencyThirdPage","props","state","mounted","phonelabels","renderPhoneNumberInputs","formProps","errorClass","meta","error","touched","recruitment_office","label","split","activeLanguage","code","fields","length","push","block","map","recruitmentOffice","index","remove","renderInput","addBtn","checkbox","placeholder","input","renderError","addTranslationsForActiveLanguage","setState","prevProps","prevState","hasActiveLanguageChanged","params","lang","history","location","pathname","then","translations","addTranslationForLanguage","phonelabel","findDOMNode","refs","text","fieldId","name","indexOf","color","formValues","console","log","handleSubmit","onSubmit","width","padding","previousPage","invalid","pristine","validate","errors","recruitmentofficephonenumbers","_error","recruitmentofficephonenumbersArrayErrors","forEach","recruitmentoffice","recruitmentofficephonenumbersErrors","regX","RegExp","test","phonenumber","officeName","address","city","propTypes","func","isRequired","mapStateToProps","activePage","tempEdge","active_page","form","destroyOnUnmount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Field, FieldArray, reduxForm, formValueSelector } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport  { setActivePage } from '../../../Redux/actions/tempEdgeActions';\n\nconst $ = window.$;\nconst selector = formValueSelector('CreateNewAgency');\n\nclass WizardCreateNewAgencyThirdPage extends Component{\n  constructor(props){\n    super(props);\n\n    this.addTranslationsForActiveLanguage();\n  }\n\n  state= { mounted: false, phonelabels: '' }\n\n  componentDidMount(){\n    this.setState({\n      mounted: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    const hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n    if (hasActiveLanguageChanged) {\n      this.props.params.lang = this.props.activeLanguage.code;\n      this.props.history.location.pathname = `/registerAgency/${this.props.activeLanguage.code}`;\n      this.props.history.push(`/registerAgency/${this.props.activeLanguage.code}`);\n      this.addTranslationsForActiveLanguage();\n    }\n  }\n\n  addTranslationsForActiveLanguage(){\n    const {activeLanguage} = this.props;\n\n    if(!activeLanguage){\n      return;\n    }\n\n    import(`../../../translations/${activeLanguage.code}.tempedge.json`)\n      .then(async translations => {\n        await this.props.addTranslationForLanguage(translations, activeLanguage.code);\n\n        let phonelabel = $(ReactDOM.findDOMNode(this.refs.phonelabel)).text();\n\n        if(this.state.mounted && phonelabel != '') {\n          this.setState({\n            phonelabels: phonelabel\n          });\n        }\n      });\n  }\n\n  renderError(formProps){\n    let fieldId='';\n\n    if(typeof formProps.input !== 'undefined'){\n      if(formProps.index != null || typeof formProps.index != 'undefined' || formProps.index != ''){\n        if(formProps.input.name.indexOf(\"recruitmentofficephonenumbers\") !== -1){\n           if(formProps.input.name.indexOf(\"officeName\") !== -1){\n             fieldId = `com.tempedge.error.recruitmentoffice.recruitmentofficephonenumbers.officeNamerequired`;\n           }else if(formProps.input.name.indexOf(\"address\") !== -1){\n             fieldId = `com.tempedge.error.recruitmentoffice.recruitmentofficephonenumbers.addressrequired`;\n           }else if(formProps.input.name.indexOf(\"city\") !== -1){\n             fieldId = `com.tempedge.error.recruitmentoffice.recruitmentofficephonenumbers.cityrequired`;\n           }else if(formProps.input.name.indexOf(\"phonenumber\") !== -1){\n             fieldId = `com.tempedge.error.recruitmentoffice.recruitmentofficephonenumbers.phonenumberrequired`;\n          }\n        }\n      }\n\n      if(formProps.meta.touched && formProps.meta.error && typeof formProps.meta.error !== 'undefined'){\n        return(\n          <p style={{color: '#a94442'}}><Translate id={fieldId}>{formProps.meta.error}</Translate></p>\n        );\n      }\n    }\n  }\n\n  renderPhoneNumberInputs = (formProps) => {\n    let errorClass = `col-xs-10 ${(formProps.meta.error && formProps.meta.touched)? 'has-error': ''}`;\n    let recruitment_office = formProps.label.split(\" \");\n\n    if(this.props.activeLanguage.code === 'en'){\n      recruitment_office[0] = (recruitment_office[0] === 'OfficeName')? 'Office Name': '';\n    }else if(this.props.activeLanguage.code === 'es'){\n      recruitment_office[0] = (recruitment_office[0] === 'NombredeOficina')? 'Nombre de Oficina': '';\n    }\n\n    if(formProps.fields.length < 1){\n      formProps.fields.push({});\n    }\n\n    let block = formProps.fields.map((recruitmentOffice, index) => (\n      <li key={index} className=\"agency-phone-li\">\n        <div className=\"row\">\n          { (index > 0)? <button type=\"button\" className=\"pull-right phone-num-btn-close\" title=\"Remove Agency\" onClick={() => formProps.fields.remove(index)}>X</button>: '' }\n        </div>\n        <Field name={`${recruitmentOffice}.officeName`} type=\"text\" placeholder=\"Office Name\" index={index} label={recruitment_office[0]} component={this.renderInput} />\n        <Field name={`${recruitmentOffice}.address`} type=\"text\" placeholder=\"Address\" index={index} label={recruitment_office[1]} component={this.renderInput} />\n        <Field name={`${recruitmentOffice}.city`} type=\"text\" placeholder=\"City\" index={index} label={recruitment_office[2]} component={this.renderInput} />\n        <Field name={`${recruitmentOffice}.phonenumber`} type=\"text\" placeholder=\"xxx-xxx-xxxx\" index={index} label={recruitment_office[3]} component={this.renderInput} />\n      </li>\n    ));\n\n    let addBtn = (\n      <li>\n        <div className=\"row\">\n          <button type=\"button\" className=\"center-block\" onClick={() => formProps.fields.push({})}>Add a New Recruitment Office</button>\n        </div>\n      </li>\n    );\n\n    return(\n      <React.Fragment>\n        <div className=\"clearfix recruiting-office-phone\">\n            <label className=\"pull-left checkbox-inline\">\n              <Translate id=\"com.tempedge.msg.label.recruitingoffice\">Recruiting Office</Translate>\n            </label>\n            <Field name=\"recruitingofficecheckbox\" id=\"recruitingoffice\" component=\"input\" type=\"checkbox\"/>\n        </div>\n        <ul>\n          { (!this.props.checkbox || typeof this.props.checkbox === 'undefined')? block: '' }\n          { (!this.props.checkbox || typeof this.props.checkbox === 'undefined')? addBtn: ''}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  renderInput = (formProps) => {\n    let errorClass = `col-xs-10 ${(formProps.meta.error && formProps.meta.touched)? 'has-error': ''}`;\n\n    return(\n      <React.Fragment>\n        <div className=\"row agency-phone-box\">\n          <label className=\"col-xs-2 control-label\">{formProps.label}</label>\n          <div className={errorClass}>\n            <input className=\"form-control\" placeholder={formProps.placeholder} {...formProps.input} autoComplete=\"off\" />\n            {this.renderError(formProps)}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  onSubmit(formValues){\n    console.log(formValues);\n  }\n\n  render(){\n    console.log(\"Third Page\");\n\n    return(\n      <React.Fragment>\n        <h2 className=\"text-center page-title\"><Translate id=\"com.tempedge.msg.label.newagency\">New Agency</Translate></h2>\n        <form onSubmit={this.props.handleSubmit(this.props.onSubmit)} className=\"form-horizontal center-block register-form\" style={{width: \"40%\", padding: \"30px 0\"}}>\n          <div className=\"form-group\">\n            <span className=\"translation-placeholder\" ref=\"phonelabel\"><Translate id=\"com.tempedge.msg.label.recruitmentofficephonenumbers\">Office Name Address City Phone</Translate></span>\n            <FieldArray name=\"recruitmentofficephonenumbers\" type=\"text\" placeholder=\"Phone Number\" label={this.state.phonelabels} component={this.renderPhoneNumberInputs} />\n          </div>\n          <div className=\"form-group prev-next-btns\">\n            <div className=\"col-md-4 col-md-offset-2\">\n              <button type=\"button\" className=\"btn btn-primary btn-block register-save-btn previous\" onClick={this.props.previousPage}>Previous</button>\n            </div>\n            <div className=\"col-md-4\">\n              <button type=\"submit\" className=\"btn btn-primary btn-block register-save-btn next\" disabled={this.props.invalid || this.props.pristine}><Translate id=\"com.tempedge.msg.label.next\">Next</Translate></button>\n            </div>\n          </div>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nlet validate = (formValues) => {\n  let errors = {};\n\n  if (!formValues.recruitmentofficephonenumbers || !formValues.recruitmentofficephonenumbers.length) {\n    errors.recruitmentofficephonenumbers = { _error: 'At least one recruitment office phone number must be entered.' };\n  }else{\n    let recruitmentofficephonenumbersArrayErrors = [];\n\n    formValues.recruitmentofficephonenumbers.forEach((recruitmentoffice, index) => {\n      let recruitmentofficephonenumbersErrors = {};\n      let regX = new RegExp(/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]*$/g);\n\n      if (!regX.test(recruitmentoffice.phonenumber)){\n        recruitmentofficephonenumbersErrors.phonenumber = 'Enter the recruitment office phone number.';\n      }\n\n      if(!recruitmentoffice.officeName){\n        recruitmentofficephonenumbersErrors.officeName = 'Enter the recruitment office name.';\n      }\n\n      if(!recruitmentoffice.address){\n        recruitmentofficephonenumbersErrors.address = 'Enter the recruitment office address.';\n      }\n\n      if(!recruitmentoffice.city){\n        recruitmentofficephonenumbersErrors.city = \"Enter the recruitment office city.\";\n      }\n\n      recruitmentofficephonenumbersArrayErrors[index] = recruitmentofficephonenumbersErrors;\n    });\n\n    if(recruitmentofficephonenumbersArrayErrors.length){\n      errors.recruitmentofficephonenumbers = recruitmentofficephonenumbersArrayErrors;\n    }\n  }\n\n  return errors;\n}\n\nWizardCreateNewAgencyThirdPage.propTypes = {\n  setActivePage: PropTypes.func.isRequired\n}\n\nlet mapStateToProps = (state) => {\n  return({\n    activePage: state.tempEdge.active_page\n  });\n}\n\nWizardCreateNewAgencyThirdPage = reduxForm({\n  form: 'CreateNewAgency',\n  destroyOnUnmount: false,\n  validate: validate\n})(WizardCreateNewAgencyThirdPage);\n\nWizardCreateNewAgencyThirdPage = connect(\n  state => ({\n    checkbox: selector(state, 'recruitingofficecheckbox')\n  })\n)(WizardCreateNewAgencyThirdPage)\n\nexport default withLocalize(connect(mapStateToProps, { setActivePage })(WizardCreateNewAgencyThirdPage));\n"]},"metadata":{},"sourceType":"module"}