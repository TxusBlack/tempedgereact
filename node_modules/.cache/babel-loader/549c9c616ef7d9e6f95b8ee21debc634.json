{"ast":null,"code":"import _extends from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\src\\\\components\\\\common\\\\PrivateRoute\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport UserDashboard from '../../../Pages/UserDashboard/UserDashboard.js';\nimport AdminDashboard from '../../../Pages/AdminDashboard/AdminDashboard.js';\n\nvar PrivateRoute = function PrivateRoute(props) {\n  var rest = _extends({}, props);\n\n  var RouteComponent = React.createElement(UserDashboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }); //UserDashboard component, default\n\n  var RedirectComponent = React.createElement(Redirect, {\n    to: {\n      pathname: props.redirectPath,\n      state: {\n        from: props.location\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }); //Back to Login as per 'App.js'\n  //Conditional rendering based on user role\n\n  if (props.userRoleId === 1) {\n    //If user is Admin\n    RouteComponent = React.createElement(AdminDashboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Route, Object.assign({\n    render: function render() {\n      return props.UserStatus === 'A' ? RouteComponent : RedirectComponent;\n    }\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    UserStatus: state.tempEdge.login !== \"\" ? state.tempEdge.login.portalUserList[0].status : null,\n    AgencyStatus: state.tempEdge.login !== \"\" ? state.tempEdge.login.portalUserList[0].organizationEntity.status : null,\n    userRoleId: state.tempEdge.login !== \"\" ? state.tempEdge.login.portalUserList[0].userRoleId : null\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:\\Users\\migue\\Documents\\Jose\\TempEdge\\tempedgereact\\tempedgereact - jose\\src\\components\\common\\PrivateRoute\\PrivateRoute.js"],"names":["React","connect","Redirect","Route","UserDashboard","AdminDashboard","PrivateRoute","props","rest","RouteComponent","RedirectComponent","pathname","redirectPath","state","from","location","userRoleId","UserStatus","mapStateToProps","tempEdge","login","portalUserList","status","AgencyStatus","organizationEntity"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,cAAP,MAA2B,iDAA3B;;AAEA,IAAIC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MACnBC,IADmB,gBACVD,KADU;;AAE5B,MAAIE,cAAc,GAAG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CAF4B,CAEc;;AAC1C,MAAIC,iBAAiB,GAAG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAEJ,KAAK,CAACK,YAAlB;AAAgCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEP,KAAK,CAACQ;AAAd;AAAvC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAH4B,CAGkF;AAE9G;;AACA,MAAGR,KAAK,CAACS,UAAN,KAAqB,CAAxB,EAA0B;AAAM;AAC9BP,IAAAA,cAAc,GAAG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AACD;;AAED,SACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAA,aAAOF,KAAK,CAACU,UAAN,KAAqB,GAAtB,GAA6BR,cAA7B,GAA8CC,iBAApD;AAAA;AAAf,KAA0FF,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAGD,CAbD;;AAeA,IAAIU,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD,EAAW;AAC/B,SAAM;AACJI,IAAAA,UAAU,EAAGJ,KAAK,CAACM,QAAN,CAAeC,KAAf,KAAyB,EAA1B,GAA+BP,KAAK,CAACM,QAAN,CAAeC,KAAf,CAAqBC,cAArB,CAAoC,CAApC,EAAuCC,MAAtE,GAA8E,IADtF;AAEJC,IAAAA,YAAY,EAAGV,KAAK,CAACM,QAAN,CAAeC,KAAf,KAAyB,EAA1B,GAA+BP,KAAK,CAACM,QAAN,CAAeC,KAAf,CAAqBC,cAArB,CAAoC,CAApC,EAAuCG,kBAAvC,CAA0DF,MAAzF,GAAiG,IAF3G;AAGJN,IAAAA,UAAU,EAAGH,KAAK,CAACM,QAAN,CAAeC,KAAf,KAAyB,EAA1B,GAA+BP,KAAK,CAACM,QAAN,CAAeC,KAAf,CAAqBC,cAArB,CAAoC,CAApC,EAAuCL,UAAtE,GAAkF;AAH1F,GAAN;AAKD,CAND;;AAQA,eAAef,OAAO,CAACiB,eAAD,CAAP,CAAyBZ,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport UserDashboard from '../../../Pages/UserDashboard/UserDashboard.js';\r\nimport AdminDashboard from '../../../Pages/AdminDashboard/AdminDashboard.js';\r\n\r\nlet PrivateRoute = (props) => {\r\n  let { ...rest } = props;\r\n  let RouteComponent = <UserDashboard />;   //UserDashboard component, default\r\n  let RedirectComponent = <Redirect to={{ pathname: props.redirectPath, state: { from: props.location }}} />;   //Back to Login as per 'App.js'\r\n\r\n  //Conditional rendering based on user role\r\n  if(props.userRoleId === 1){     //If user is Admin\r\n    RouteComponent = <AdminDashboard />\r\n  }\r\n\r\n  return (\r\n    <Route render={() => (props.UserStatus === 'A') ? RouteComponent : RedirectComponent} {...rest} />\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    UserStatus: (state.tempEdge.login !== \"\")? state.tempEdge.login.portalUserList[0].status: null,\r\n    AgencyStatus: (state.tempEdge.login !== \"\")? state.tempEdge.login.portalUserList[0].organizationEntity.status: null,\r\n    userRoleId: (state.tempEdge.login !== \"\")? state.tempEdge.login.portalUserList[0].userRoleId: null\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}