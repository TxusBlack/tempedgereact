{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\src\\\\Pages\\\\FaceMash\\\\FaceMashMobile.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport Webcam from \"react-webcam\";\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport { push } from 'connected-react-router';\nimport EventEmitter from 'events';\nimport FaceTracker from './assets/tracking';\nimport './assets/face.min.js';\nimport ModalConfirm from '../../Modals/FaceMashConfirm/Modal';\nimport ModalFail from '../../Modals/FaceMashFail/Modal';\nimport ActiveLanguageAddTranslation from '../../components/common/ActiveLanguageAddTranslation/ActiveLanguageAddTranslation.js';\nimport httpService from '../../utils/services/httpService/httpService.js';\nvar canvas_width = 460;\nvar canvas_height = 343;\n\nvar FaceMashMobile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FaceMashMobile, _React$Component);\n\n  function FaceMashMobile(props) {\n    var _this;\n\n    _classCallCheck(this, FaceMashMobile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FaceMashMobile).call(this, props));\n    _this.state = {\n      initialized: 0,\n      start: 0,\n      delay: 3,\n      // <== Face Detection Time\n      trackerTask: null,\n      faceDetectTracker: null,\n      faceDetected: false,\n      play: null,\n      stop: null,\n      waitMsg: \"\",\n      employeeName: \"\",\n      timeStatus: \"\",\n      showSuccessModal: false,\n      showFailModal: false\n    };\n    _this.reStartTracking =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var delay;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              delay = 2000; //Delay before 'Please Wait' message gets replaced.\n              //Set canvas width (default 320px) where trackers will detect faces and draw rectangles.\n\n              _this.setCanvasWidth(canvas_width); //If this is the first time the FaceMash component is loaded, set delay to zero.\n\n\n              if (!(_this.state.initialized < 1)) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 5;\n              return _this.setState({\n                initialized: 1\n              }, function () {\n                delay = 0;\n              });\n\n            case 5:\n              //Otherwise continue with the default delay of 3 secs.\n              setTimeout(function () {\n                _this.setWaitMessage(_this.state.delay);\n\n                _this.setTimerStart();\n\n                _this.state.trackerTask.run();\n              }, delay);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.setWaitMessage = function (sec) {\n      if (sec > 0) {\n        _this.setState({\n          waitMsg: \"Please stand still for \".concat(sec, \" seconds.\")\n        });\n      } else if (sec < 4) {\n        _this.setState({\n          waitMsg: \"\"\n        });\n      }\n    };\n\n    _this.toggleModalOnOff = function (mode) {\n      if (mode === \"success\") {\n        _this.setState({\n          showSuccessModal: !_this.state.showSuccessModal\n        });\n      } else {\n        _this.setState({\n          showFailModal: !_this.state.showFailModal\n        });\n      }\n    };\n\n    _this.setRef = function (webcam) {\n      _this.webcam = webcam;\n    };\n\n    _this.capture = function () {\n      var imageSrc = _this.webcam.getScreenshot();\n\n      return imageSrc;\n    };\n\n    _this.initFaceDetectTracker = function (tracker, canvas, context, faceDetectTracker) {\n      tracker.setInitialScale(4);\n      tracker.setStepSize(2);\n      tracker.setEdgesDensity(0.1);\n\n      _this.setTimerStart();\n\n      var seconds = 0;\n      var canvasWidth = canvas.width;\n      tracker.on('track', function (event) {\n        console.log(\"initFaceDetectTracker Running!\"); //This will kick in as soon as a face is detected\n\n        event.data.forEach(function (rect) {\n          //This will set faceDetected to true, given a face has already been detected\n          if (!_this.state.faceDetected) {\n            console.log(\"Face Detected!\");\n\n            _this.resetFaceDetected(true); //Set faceDetected to true.\n\n          }\n        });\n      });\n    };\n\n    _this.initFaceTracker = function (tracker, canvas, context, trackerTask) {\n      tracker.setInitialScale(4);\n      tracker.setStepSize(2);\n      tracker.setEdgesDensity(0.1);\n\n      _this.setTimerStart();\n\n      var seconds = 0;\n      var canvasWidth = canvas.width;\n      tracker.on('track', function (event) {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        event.data.forEach(\n        /*#__PURE__*/\n        function () {\n          var _ref2 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(rect) {\n            var elapsed, imageSrc, res, employee;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    // Calculate elapsed to tenth of a second:\n                    elapsed = Math.round((new Date() - _this.state.start) / 100); // This will give a number with one digit after the decimal dot (xx.x):\n\n                    seconds = (elapsed / 10).toFixed(1);\n                    console.log(\"start: \", _this.state.start);\n                    console.log(\"elapsed: \", elapsed);\n                    console.log(\"secs: \", seconds);\n\n                    _this.setState({\n                      waitMsg: \"Please stand still for \".concat(parseInt(4 - seconds), \" seconds.\")\n                    });\n\n                    if (!(seconds > _this.state.delay)) {\n                      _context2.next = 19;\n                      break;\n                    }\n\n                    imageSrc = _this.capture();\n                    trackerTask.stop();\n\n                    _this.setCanvasWidth(0); //CALL TO SERVER REST API\n\n\n                    _context2.next = 12;\n                    return httpService.postImage('/faceRecognition/recognizeFace', imageSrc);\n\n                  case 12:\n                    res = _context2.sent;\n                    console.log('res: ', res);\n                    employee = \"Employee\";\n                    if (res.data.matchedEmpId == 60) employee = \"Jose Vasconcellos\";else if (res.data.matchedEmpId == 70) employee = \"Luis Diaz\";else employee = \"Employee\";\n\n                    if (res.data.message === \"Face matched\") {\n                      _this.setState({\n                        employeeName: employee,\n                        timeStatus: \"In\"\n                      }, function () {\n                        _this.toggleModal(0); //Opens Sucess Modal\n\n                      });\n                    } else {\n                      _this.setState({\n                        employeeName: \"Person\"\n                      }, function () {\n                        _this.toggleModal(-1); //Opens Fail Modal\n\n                      });\n                    }\n\n                    console.log(\"Canvas Width: \", canvasWidth);\n                    console.log(\"Captured Image: \", imageSrc);\n\n                  case 19:\n                    context.strokeStyle = 'red';\n                    context.strokeRect(rect.x, rect.y, rect.width, rect.height);\n\n                  case 21:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      });\n    };\n\n    ActiveLanguageAddTranslation(_this.props.activeLanguage, _this.props.addTranslationForLanguage);\n    return _this;\n  }\n\n  _createClass(FaceMashMobile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var canvas = document.getElementById('canvas');\n      var context = canvas.getContext('2d');\n      var tracker = new window.tracking.ObjectTracker(\"face\");\n      var tracker2 = new window.tracking.ObjectTracker(\"face\");\n      this.setWaitMessage(this.state.delay);\n      this.setState({\n        waitMsg: \"Please Wait.\",\n        trackerTask: window.tracking.track('.facemash-mobile', tracker, {\n          camera: true\n        }),\n        faceDetectTracker: window.tracking.track('.facemash-mobile', tracker2, {\n          camera: true\n        })\n      }, function () {\n        _this2.initFaceTracker(tracker, canvas, context, _this2.state.trackerTask);\n\n        _this2.initFaceDetectTracker(tracker2, canvas, context, _this2.state.faceDetectTracker);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n      if (hasActiveLanguageChanged) {\n        this.props.push(\"/snapshot-mobile/\".concat(this.props.activeLanguage.code));\n        ActiveLanguageAddTranslation(this.props.activeLanguage, this.props.addTranslationForLanguage);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log(\"this.state.trackerTask: \", this.state.trackerTask);\n      this.state.trackerTask.stop();\n      this.state.faceDetectTracker.stop();\n      this.state.trackerTask.events_.stopVideoFeed[0]();\n    } //Set starting time for timer\n\n  }, {\n    key: \"setTimerStart\",\n    value: function setTimerStart() {\n      this.setState({\n        start: Date.now()\n      });\n    } //Set trackers canvas width (area on which to detect a face and draw rectangles)\n\n  }, {\n    key: \"setCanvasWidth\",\n    value: function setCanvasWidth(width) {\n      var canvas = document.getElementById('canvas');\n      canvas.width = width;\n    } //re-starts 1st tracker that finds a face\n\n  }, {\n    key: \"reStartfaceDetectTracker\",\n    value: function reStartfaceDetectTracker() {\n      this.state.faceDetectTracker.run();\n      this.setState({\n        waitMsg: 'Please Wait.'\n      });\n    } //re-starts 2nd tracker that takes picture\n\n  }, {\n    key: \"resetFaceDetected\",\n    //Change state for faceDetected\n    value: function resetFaceDetected(faceState) {\n      var _this3 = this;\n\n      console.log(\"Resseting Face state to: \", faceState); //Stop first tracker given a feace has already been detected\n\n      this.state.faceDetectTracker.stop(); //Set faceDetected to true in the state\n\n      this.setState({\n        faceDetected: faceState\n      }, function () {\n        if (_this3.state.faceDetected) {\n          _this3.reStartTracking(); //re-start 2nd tracker to take picture\n\n        }\n      });\n    }\n  }, {\n    key: \"toggleModal\",\n    //Open Login success/failure modals\n    value: function toggleModal(mode) {\n      if (mode > -1) {\n        this.setWaitMessage(0);\n        this.resetFaceDetected(false);\n        this.toggleModalOnOff(\"success\");\n      } else if (mode < 0) {\n        this.setWaitMessage(0);\n        this.resetFaceDetected(false);\n        this.toggleModalOnOff(\"fail\");\n      }\n    } //Change Modals states\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var videoConstraints = {\n        width: canvas_width,\n        height: canvas_height,\n        facingMode: \"user\"\n      };\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-8 offset-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          width: videoConstraints.width,\n          height: videoConstraints.height\n        },\n        className: \"mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(Webcam, {\n        className: \"mx-auto facemash-mobile\",\n        audio: false,\n        height: 359,\n        id: \"facemash-mobile\",\n        ref: this.setRef,\n        screenshotFormat: \"image/jpeg\",\n        width: videoConstraints.width,\n        videoConstraints: videoConstraints,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"canvas\",\n        width: videoConstraints.width,\n        height: \"359\",\n        style: {\n          position: \"absolute\",\n          top: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, this.state.waitMsg))), React.createElement(ModalConfirm, {\n        open: this.state.showSuccessModal,\n        toggleModal: this.toggleModalOnOff,\n        title: \"TempEdge Time Track\",\n        employee: this.state.employeeName,\n        timeStatus: this.state.timeStatus,\n        reStartfaceDetectTracker: function reStartfaceDetectTracker() {\n          return _this4.reStartfaceDetectTracker();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), React.createElement(ModalFail, {\n        open: this.state.showFailModal,\n        toggleModal: this.toggleModalOnOff,\n        title: \"TempEdge Time Track\",\n        employee: this.state.employeeName,\n        reStartfaceDetectTracker: function reStartfaceDetectTracker() {\n          return _this4.reStartfaceDetectTracker();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FaceMashMobile;\n}(React.Component);\n\nexport default withLocalize(connect(null, {\n  push: push\n})(FaceMashMobile));","map":{"version":3,"sources":["C:\\Users\\migue\\Documents\\Jose\\TempEdge\\tempedgereact\\tempedgereact - jose\\src\\Pages\\FaceMash\\FaceMashMobile.js"],"names":["React","ReactDOM","Webcam","connect","withLocalize","Translate","push","EventEmitter","FaceTracker","ModalConfirm","ModalFail","ActiveLanguageAddTranslation","httpService","canvas_width","canvas_height","FaceMashMobile","props","state","initialized","start","delay","trackerTask","faceDetectTracker","faceDetected","play","stop","waitMsg","employeeName","timeStatus","showSuccessModal","showFailModal","reStartTracking","setCanvasWidth","setState","setTimeout","setWaitMessage","setTimerStart","run","sec","toggleModalOnOff","mode","setRef","webcam","capture","imageSrc","getScreenshot","initFaceDetectTracker","tracker","canvas","context","setInitialScale","setStepSize","setEdgesDensity","seconds","canvasWidth","width","on","event","console","log","data","forEach","rect","resetFaceDetected","initFaceTracker","clearRect","height","elapsed","Math","round","Date","toFixed","parseInt","postImage","res","employee","matchedEmpId","message","toggleModal","strokeStyle","strokeRect","x","y","activeLanguage","addTranslationForLanguage","document","getElementById","getContext","window","tracking","ObjectTracker","tracker2","track","camera","prevProps","prevState","hasActiveLanguageChanged","code","events_","stopVideoFeed","now","faceState","videoConstraints","facingMode","position","top","textAlign","reStartfaceDetectTracker","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport Webcam from \"react-webcam\";\r\nimport { connect } from 'react-redux';\r\nimport { withLocalize, Translate } from 'react-localize-redux';\r\nimport { push } from 'connected-react-router';\r\nimport EventEmitter from 'events';\r\nimport FaceTracker from './assets/tracking';\r\nimport './assets/face.min.js';\r\nimport ModalConfirm from '../../Modals/FaceMashConfirm/Modal';\r\nimport ModalFail from '../../Modals/FaceMashFail/Modal';\r\nimport ActiveLanguageAddTranslation from '../../components/common/ActiveLanguageAddTranslation/ActiveLanguageAddTranslation.js';\r\nimport httpService from '../../utils/services/httpService/httpService.js';\r\n\r\nlet canvas_width = 460;\r\nlet canvas_height = 343;\r\n\r\nclass FaceMashMobile extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    ActiveLanguageAddTranslation(this.props.activeLanguage, this.props.addTranslationForLanguage);\r\n  }\r\n\r\n  state = {\r\n    initialized: 0,\r\n    start: 0,\r\n    delay: 3,  // <== Face Detection Time\r\n    trackerTask: null,\r\n    faceDetectTracker: null,\r\n    faceDetected: false,\r\n    play: null,\r\n    stop: null,\r\n    waitMsg: \"\",\r\n    employeeName: \"\",\r\n    timeStatus: \"\",\r\n    showSuccessModal: false,\r\n    showFailModal: false\r\n  };\r\n\r\n  componentDidMount(){\r\n    let canvas = document.getElementById('canvas');\r\n    let context = canvas.getContext('2d');\r\n    let tracker = new window.tracking.ObjectTracker(\"face\");\r\n    let tracker2 = new window.tracking.ObjectTracker(\"face\");\r\n\r\n    this.setWaitMessage(this.state.delay);\r\n    this.setState({\r\n      waitMsg: `Please Wait.`,\r\n      trackerTask: window.tracking.track('.facemash-mobile', tracker, { camera: true }),\r\n      faceDetectTracker: window.tracking.track('.facemash-mobile', tracker2, { camera: true })\r\n    }, () => {\r\n      this.initFaceTracker(tracker, canvas, context, this.state.trackerTask);\r\n      this.initFaceDetectTracker(tracker2, canvas, context, this.state.faceDetectTracker);\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\r\n\r\n    if (hasActiveLanguageChanged) {\r\n      this.props.push(`/snapshot-mobile/${this.props.activeLanguage.code}`);\r\n      ActiveLanguageAddTranslation(this.props.activeLanguage, this.props.addTranslationForLanguage);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    console.log(\"this.state.trackerTask: \", this.state.trackerTask);\r\n    this.state.trackerTask.stop();\r\n    this.state.faceDetectTracker.stop();\r\n    this.state.trackerTask.events_.stopVideoFeed[0]();\r\n  }\r\n\r\n  //Set starting time for timer\r\n  setTimerStart(){\r\n    this.setState({\r\n      start: Date.now()\r\n    });\r\n  }\r\n\r\n  //Set trackers canvas width (area on which to detect a face and draw rectangles)\r\n  setCanvasWidth(width){\r\n    let canvas = document.getElementById('canvas');\r\n    canvas.width = width;\r\n  }\r\n\r\n  //re-starts 1st tracker that finds a face\r\n  reStartfaceDetectTracker(){\r\n    this.state.faceDetectTracker.run();\r\n\r\n    this.setState({\r\n      waitMsg: 'Please Wait.'\r\n    });\r\n  }\r\n\r\n  //re-starts 2nd tracker that takes picture\r\n   reStartTracking = async () => {\r\n    let delay = 2000;    //Delay before 'Please Wait' message gets replaced.\r\n\r\n    //Set canvas width (default 320px) where trackers will detect faces and draw rectangles.\r\n    this.setCanvasWidth(canvas_width);\r\n\r\n    //If this is the first time the FaceMash component is loaded, set delay to zero.\r\n    if(this.state.initialized < 1){\r\n      await this.setState({\r\n        initialized: 1\r\n      }, () => {\r\n        delay = 0;\r\n      });\r\n    }\r\n\r\n    //Otherwise continue with the default delay of 3 secs.\r\n    setTimeout(() => {\r\n      this.setWaitMessage(this.state.delay);\r\n      this.setTimerStart();\r\n      this.state.trackerTask.run();\r\n    }, delay)\r\n  }\r\n\r\n  //Change state for faceDetected\r\n  resetFaceDetected(faceState){\r\n    console.log(\"Resseting Face state to: \", faceState);\r\n\r\n    //Stop first tracker given a feace has already been detected\r\n    this.state.faceDetectTracker.stop();\r\n\r\n    //Set faceDetected to true in the state\r\n    this.setState({\r\n      faceDetected: faceState\r\n    }, () => {\r\n      if(this.state.faceDetected){\r\n          this.reStartTracking();   //re-start 2nd tracker to take picture\r\n      }\r\n    });\r\n  }\r\n\r\n  setWaitMessage = (sec) => {\r\n    if(sec > 0){\r\n      this.setState({ waitMsg: `Please stand still for ${sec} seconds.` });\r\n    }else if(sec < 4){\r\n      this.setState({ waitMsg: `` });\r\n    }\r\n  }\r\n\r\n  //Open Login success/failure modals\r\n  toggleModal(mode){\r\n    if(mode > -1){\r\n      this.setWaitMessage(0);\r\n      this.resetFaceDetected(false);\r\n      this.toggleModalOnOff(\"success\");\r\n    }else if(mode < 0){\r\n      this.setWaitMessage(0);\r\n      this.resetFaceDetected(false);\r\n      this.toggleModalOnOff(\"fail\");\r\n    }\r\n  }\r\n\r\n  //Change Modals states\r\n  toggleModalOnOff = (mode) => {\r\n    if(mode === \"success\"){\r\n      this.setState({\r\n        showSuccessModal: !this.state.showSuccessModal\r\n      });\r\n    }else{\r\n      this.setState({\r\n        showFailModal: !this.state.showFailModal\r\n      });\r\n    }\r\n  }\r\n\r\n  setRef = webcam => {\r\n    this.webcam =  webcam;\r\n  };\r\n\r\n  //Take user screenshot(s)\r\n  capture = () => {\r\n    let imageSrc = this.webcam.getScreenshot();\r\n    return imageSrc;\r\n  };\r\n\r\n  //Init 1st tracker to detect face\r\n  initFaceDetectTracker = (tracker, canvas, context, faceDetectTracker) => {\r\n    tracker.setInitialScale(4);\r\n    tracker.setStepSize(2);\r\n    tracker.setEdgesDensity(0.1);\r\n\r\n    this.setTimerStart();\r\n    let seconds = 0;\r\n    let canvasWidth = canvas.width;\r\n\r\n    tracker.on('track', event => {\r\n      console.log(\"initFaceDetectTracker Running!\");\r\n\r\n      //This will kick in as soon as a face is detected\r\n      event.data.forEach(rect => {\r\n\r\n        //This will set faceDetected to true, given a face has already been detected\r\n        if(!this.state.faceDetected){\r\n          console.log(\"Face Detected!\");\r\n\r\n          this.resetFaceDetected(true);   //Set faceDetected to true.\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  //Init 2nd tracker to take user picture\r\n  initFaceTracker = (tracker, canvas, context, trackerTask) => {\r\n    tracker.setInitialScale(4);\r\n    tracker.setStepSize(2);\r\n    tracker.setEdgesDensity(0.1);\r\n\r\n    this.setTimerStart();\r\n    let seconds = 0;\r\n    let canvasWidth = canvas.width;\r\n\r\n    tracker.on('track', event => {\r\n      context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      event.data.forEach(async rect => {\r\n        // Calculate elapsed to tenth of a second:\r\n        let elapsed = Math.round((new Date() - this.state.start) / 100);\r\n\r\n        // This will give a number with one digit after the decimal dot (xx.x):\r\n        seconds = (elapsed / 10).toFixed(1);\r\n\r\n        console.log(\"start: \", this.state.start);\r\n        console.log(\"elapsed: \", elapsed);\r\n        console.log(\"secs: \", seconds);\r\n        this.setState({ waitMsg: `Please stand still for ${parseInt(4-seconds)} seconds.` });\r\n\r\n        if(seconds > this.state.delay){\r\n          let imageSrc = this.capture();\r\n          trackerTask.stop();\r\n          this.setCanvasWidth(0);\r\n\r\n          //CALL TO SERVER REST API\r\n          let res = await httpService.postImage('/faceRecognition/recognizeFace', imageSrc);\r\n          console.log('res: ', res);\r\n\r\n          let employee = \"Employee\";\r\n\r\n          if(res.data.matchedEmpId == 60)\r\n            employee = \"Jose Vasconcellos\";\r\n          else if(res.data.matchedEmpId == 70)\r\n            employee = \"Luis Diaz\";\r\n          else\r\n            employee = \"Employee\";\r\n\r\n          if(res.data.message === \"Face matched\"){\r\n            this.setState({\r\n              employeeName: employee,\r\n              timeStatus: \"In\"\r\n            }, () => {\r\n              this.toggleModal(0);   //Opens Sucess Modal\r\n            });\r\n          }else{\r\n            this.setState({\r\n              employeeName: \"Person\"\r\n            }, () => {\r\n              this.toggleModal(-1);   //Opens Fail Modal\r\n            });\r\n          }\r\n\r\n          console.log(\"Canvas Width: \", canvasWidth);\r\n          console.log(\"Captured Image: \", imageSrc);\r\n        }\r\n\r\n        context.strokeStyle = 'red';\r\n        context.strokeRect(rect.x, rect.y, rect.width, rect.height);\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let videoConstraints = {\r\n      width: canvas_width,\r\n      height: canvas_height,\r\n      facingMode: \"user\"\r\n    };\r\n\r\n    return(\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8 offset-lg-2\">\r\n            <div style={{height:40}}></div>\r\n            <div style={{position: \"relative\", width: videoConstraints.width, height: videoConstraints.height}} className=\"mx-auto\">\r\n              <Webcam className=\"mx-auto facemash-mobile\"\r\n                audio={false}\r\n                height={359}\r\n                id=\"facemash-mobile\"\r\n                ref={this.setRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                width={videoConstraints.width}\r\n                videoConstraints={videoConstraints}\r\n              />\r\n              <canvas id=\"canvas\" width={videoConstraints.width} height=\"359\" style={{position: \"absolute\", top: 0}}></canvas>\r\n            </div>\r\n            <h3 style={{textAlign: \"center\"}}>{this.state.waitMsg}</h3>\r\n          </div>\r\n        </div>\r\n        <ModalConfirm open={this.state.showSuccessModal} toggleModal={this.toggleModalOnOff} title=\"TempEdge Time Track\" employee={this.state.employeeName} timeStatus={this.state.timeStatus} reStartfaceDetectTracker={() => this.reStartfaceDetectTracker()} />\r\n        <ModalFail open={this.state.showFailModal} toggleModal={this.toggleModalOnOff} title=\"TempEdge Time Track\" employee={this.state.employeeName} reStartfaceDetectTracker={() => this.reStartfaceDetectTracker()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withLocalize(connect(null, { push })(FaceMashMobile));\r\n"]},"metadata":{},"sourceType":"module"}