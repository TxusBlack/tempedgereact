{"ast":null,"code":"var getCountryList = function getCountryList(countryList) {\n  var country_list = [];\n  countryList.map(function (country, index) {\n    country_list.push({\n      country: country.countryName,\n      value: index\n    });\n  });\n  return {\n    countryList: countryList,\n    country_list: country_list\n  };\n};\n\nvar getRegionList = function getRegionList(countryList, selectedCountry) {\n  var regions;\n  var regions_list = [];\n  countryList.map(function (country) {\n    if (country.countryName === selectedCountry) {\n      regions = country.regions;\n    }\n  });\n  regions.map(function (region, index) {\n    regions_list.push({\n      region: region.name,\n      value: index\n    });\n  });\n  return regions_list;\n};\n\nvar parseCountryRegion = {\n  getCountryList: getCountryList,\n  getRegionList: getRegionList\n};\nexport default parseCountryRegion;","map":{"version":3,"sources":["C:\\Users\\migue\\Documents\\Jose\\TempEdge\\tempedgereact\\src\\components\\common\\CountryRegionParser\\CountryRegionParser.js"],"names":["getCountryList","countryList","country_list","map","country","index","push","countryName","value","getRegionList","selectedCountry","regions","regions_list","region","name","parseCountryRegion"],"mappings":"AAAA,IAAIA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,WAAD,EAAiB;AACpC,MAAIC,YAAY,GAAG,EAAnB;AAEAD,EAAAA,WAAW,CAACE,GAAZ,CAAgB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAClCH,IAAAA,YAAY,CAACI,IAAb,CAAkB;AAChBF,MAAAA,OAAO,EAAEA,OAAO,CAACG,WADD;AAEhBC,MAAAA,KAAK,EAAEH;AAFS,KAAlB;AAID,GALD;AAOA,SAAO;AACLJ,IAAAA,WAAW,EAAXA,WADK;AAELC,IAAAA,YAAY,EAAZA;AAFK,GAAP;AAID,CAdD;;AAgBA,IAAIO,aAAa,GAAG,SAAhBA,aAAgB,CAACR,WAAD,EAAcS,eAAd,EAAkC;AACpD,MAAIC,OAAJ;AACA,MAAIC,YAAY,GAAG,EAAnB;AAEAX,EAAAA,WAAW,CAACE,GAAZ,CAAgB,UAACC,OAAD,EAAa;AAC3B,QAAGA,OAAO,CAACG,WAAR,KAAwBG,eAA3B,EAA2C;AACzCC,MAAAA,OAAO,GAAGP,OAAO,CAACO,OAAlB;AACD;AACF,GAJD;AAMAA,EAAAA,OAAO,CAACR,GAAR,CAAY,UAACU,MAAD,EAASR,KAAT,EAAmB;AAC7BO,IAAAA,YAAY,CAACN,IAAb,CAAkB;AAChBO,MAAAA,MAAM,EAAEA,MAAM,CAACC,IADC;AAEhBN,MAAAA,KAAK,EAAEH;AAFS,KAAlB;AAID,GALD;AAOA,SAAOO,YAAP;AACD,CAlBD;;AAoBA,IAAIG,kBAAkB,GAAG;AACvBf,EAAAA,cAAc,EAAdA,cADuB;AAEvBS,EAAAA,aAAa,EAAbA;AAFuB,CAAzB;AAKA,eAAeM,kBAAf","sourcesContent":["let getCountryList = (countryList) => {\r\n  let country_list = [];\r\n\r\n  countryList.map((country, index) => {\r\n    country_list.push({\r\n      country: country.countryName,\r\n      value: index\r\n    });\r\n  });\r\n\r\n  return {\r\n    countryList,\r\n    country_list\r\n  };\r\n}\r\n\r\nlet getRegionList = (countryList, selectedCountry) => {\r\n  let regions;\r\n  let regions_list = [];\r\n\r\n  countryList.map((country) => {\r\n    if(country.countryName === selectedCountry){\r\n      regions = country.regions;\r\n    }\r\n  });\r\n\r\n  regions.map((region, index) => {\r\n    regions_list.push({\r\n      region: region.name,\r\n      value: index\r\n    });\r\n  });\r\n\r\n  return regions_list;\r\n}\r\n\r\nlet parseCountryRegion = {\r\n  getCountryList,\r\n  getRegionList\r\n}\r\n\r\nexport default parseCountryRegion;\r\n"]},"metadata":{},"sourceType":"module"}