{"ast":null,"code":"import _regeneratorRuntime from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/Login/CreateNewAgency/WizardCreateNewAgencyFourthPage.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Field, FieldArray, reduxForm, formValueSelector } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport { setActivePage } from '../../../Redux/actions/tempEdgeActions';\nimport ReCaptcha from \"react-google-recaptcha\";\nimport keys from '../../../apiKeys/keys';\nvar $ = window.$;\n\nvar WizardCreateNewAgencyFourthPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WizardCreateNewAgencyFourthPage, _Component);\n\n  function WizardCreateNewAgencyFourthPage(props) {\n    var _this;\n\n    _classCallCheck(this, WizardCreateNewAgencyFourthPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WizardCreateNewAgencyFourthPage).call(this, props));\n    _this.state = {\n      mounted: false,\n      salespersonlabels: '',\n      reCaptchaToken: '',\n      btnDisabled: true\n    };\n\n    _this.renderSalesPersonInputs = function (formProps) {\n      var errorClass = \"col-xs-10 \".concat(formProps.meta.error && formProps.meta.touched ? 'has-error' : '');\n      var recruitment_office = formProps.label.split(\" \");\n\n      if (formProps.fields.length < 1) {\n        formProps.fields.push({});\n      }\n\n      var block = formProps.fields.map(function (recruitmentOffice, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          className: \"agency-phone-li\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, index > 0 ? React.createElement(\"button\", {\n          type: \"button\",\n          className: \"pull-right phone-num-btn-close\",\n          title: \"Remove Salesperson\",\n          onClick: function onClick() {\n            return formProps.fields.remove(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"X\") : ''), React.createElement(Field, {\n          name: \"\".concat(recruitmentOffice, \".salespersonfirstname\"),\n          type: \"text\",\n          placeholder: \"First Name\",\n          index: index,\n          label: recruitment_office[0],\n          component: _this.renderInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), React.createElement(Field, {\n          name: \"\".concat(recruitmentOffice, \".salespersonlastname\"),\n          type: \"text\",\n          placeholder: \"Last Name\",\n          index: index,\n          label: recruitment_office[1],\n          component: _this.renderInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"row agency-phone-box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-xs-2 control-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, recruitment_office[2]), React.createElement(\"div\", {\n          className: \"col-xs-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"\".concat(recruitmentOffice, \".salespersongenre\"),\n          type: \"radio\",\n          index: index,\n          value: \"male\",\n          component: \"input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), recruitment_office[3]), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Field, {\n          name: \"\".concat(recruitmentOffice, \".salespersongenre\"),\n          type: \"radio\",\n          index: index,\n          value: \"female\",\n          component: \"input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), recruitment_office[4]))), React.createElement(Field, {\n          name: \"\".concat(recruitmentOffice, \".salespersonphonenumber\"),\n          type: \"text\",\n          placeholder: \"xxx-xxx-xxxx\",\n          index: index,\n          label: recruitment_office[5],\n          component: _this.renderInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, block, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"center-block\",\n        onClick: function onClick() {\n          return formProps.fields.push({});\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Add a New Salesperson\")))));\n    };\n\n    _this.renderInput = function (formProps) {\n      var errorClass = \"col-xs-10 \".concat(formProps.meta.error && formProps.meta.touched ? 'has-error' : '');\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row agency-phone-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, formProps.label), React.createElement(\"div\", {\n        className: errorClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        className: \"form-control\",\n        placeholder: formProps.placeholder\n      }, formProps.input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), _this.renderError(formProps))));\n    };\n\n    _this.onChange = function (recaptchaToken) {\n      console.log(\"recaptchaToken: \", recaptchaToken);\n\n      _this.setState({\n        reCaptchaToken: recaptchaToken,\n        btnDisabled: false\n      });\n    };\n\n    _this.renderReCaptcha = function (formProps) {\n      var errorClass = \"col-xs-12 \".concat(formProps.meta.error && formProps.meta.touched ? 'has-error-login login-input-error' : 'login-input');\n      return React.createElement(\"div\", {\n        className: errorClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(ReCaptcha, {\n        ref: function ref(_ref) {\n          _this.captcha = _ref;\n        },\n        size: formProps.size,\n        height: formProps.height,\n        theme: formProps.theme,\n        sitekey: keys.RECAPTCHA_SITE_KEY,\n        onChange: _this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }));\n    };\n\n    _this.addTranslationsForActiveLanguage();\n\n    return _this;\n  }\n\n  _createClass(WizardCreateNewAgencyFourthPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        mounted: true\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n      if (hasActiveLanguageChanged) {\n        this.props.params.lang = this.props.activeLanguage.code;\n        this.props.history.location.pathname = \"/registerAgency/\".concat(this.props.activeLanguage.code);\n        this.props.history.push(\"/registerAgency/\".concat(this.props.activeLanguage.code));\n        this.addTranslationsForActiveLanguage();\n      }\n    }\n  }, {\n    key: \"addTranslationsForActiveLanguage\",\n    value: function addTranslationsForActiveLanguage() {\n      var _this2 = this;\n\n      var activeLanguage = this.props.activeLanguage;\n\n      if (!activeLanguage) {\n        return;\n      }\n\n      import(\"../../../translations/\".concat(activeLanguage.code, \".tempedge.json\")).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(translations) {\n          var phonelabel;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _this2.props.addTranslationForLanguage(translations, activeLanguage.code);\n\n                case 2:\n                  phonelabel = $(ReactDOM.findDOMNode(_this2.refs.phonelabel)).text();\n\n                  if (_this2.state.mounted && phonelabel != '') {\n                    _this2.setState({\n                      salespersonlabels: phonelabel\n                    });\n                  }\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError(formProps) {\n      var fieldId = '';\n\n      if (typeof formProps.input !== 'undefined') {\n        if (formProps.index != null || typeof formProps.index != 'undefined' || formProps.index != '') {\n          if (formProps.input.name.indexOf(\"recruitmentofficesalespersons\") !== -1) {\n            if (formProps.input.name.indexOf(\"salespersonfirstname\") !== -1) {\n              fieldId = \"com.tempedge.error.recruitmentoffice.recruitmentofficesalespersons.salespersonfirstnamerequired\";\n            } else if (formProps.input.name.indexOf(\"salespersonlastname\") !== -1) {\n              fieldId = \"com.tempedge.error.recruitmentoffice.recruitmentofficesalespersons.salespersonlastnamerequired\";\n            } else if (formProps.input.name.indexOf(\"salespersongenre\") !== -1) {\n              fieldId = \"com.tempedge.error.recruitmentoffice.recruitmentofficesalespersons.salespersongenrerequired\";\n            } else if (formProps.input.name.indexOf(\"salespersonphonenumber\") !== -1) {\n              fieldId = \"com.tempedge.error.recruitmentoffice.recruitmentofficesalespersons.salespersonphonenumberrequired\";\n            }\n          }\n        }\n\n        if (formProps.meta.touched && formProps.meta.error && typeof formProps.meta.error !== 'undefined') {\n          return React.createElement(\"p\", {\n            style: {\n              color: '#a94442'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(Translate, {\n            id: fieldId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, formProps.meta.error));\n        }\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formValues) {\n      console.log(formValues);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"Fourth Page\");\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.newagency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"New Agency\")), React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.props.onSubmit),\n        className: \"form-horizontal center-block register-form\",\n        style: {\n          width: \"40%\",\n          padding: \"30px 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"translation-placeholder\",\n        ref: \"phonelabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.recruitmentofficesalespersongenre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"FirstName LastName Sex Male Female Phone\")), React.createElement(FieldArray, {\n        name: \"recruitmentofficesalespersons\",\n        type: \"text\",\n        placeholder: \"Phone Number\",\n        label: this.state.salespersonlabels,\n        component: this.renderSalesPersonInputs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group prev-next-btns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4 col-md-offset-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-block register-save-btn previous\",\n        onClick: this.props.previousPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Previous\")), React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block register-save-btn next\",\n        disabled: this.props.invalid || this.props.submiting || this.props.pristine || this.state.btnDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Submit\"))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center-block new-agency-captcha\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"captcha\",\n        size: \"normal\",\n        height: \"130px\",\n        theme: \"light\",\n        component: this.renderReCaptcha,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return WizardCreateNewAgencyFourthPage;\n}(Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.recruitmentofficesalespersons || !formValues.recruitmentofficesalespersons.length) {\n    errors.recruitmentofficesalespersons = {\n      _error: 'At least one sales person must be entered.'\n    };\n  } else {\n    var recruitmentofficesalespersonsArrayErrors = [];\n    formValues.recruitmentofficesalespersons.forEach(function (salesperson, index) {\n      var recruitmentofficesalespersonsErrors = {};\n      var regX = new RegExp(/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]*$/g);\n\n      if (!regX.test(salesperson.salespersonphonenumber)) {\n        recruitmentofficesalespersonsErrors.salespersonphonenumber = 'Enter the sales person phone number.';\n      }\n\n      if (!salesperson.salespersonfirstname) {\n        recruitmentofficesalespersonsErrors.salespersonfirstname = 'Enter the sales person first name.';\n      }\n\n      if (!salesperson.salespersonlastname) {\n        recruitmentofficesalespersonsErrors.salespersonlastname = 'Enter the sales person last name.';\n      }\n\n      if (!salesperson.salespersongenre) {\n        recruitmentofficesalespersonsErrors.salespersongenre = \"Enter a genre.\";\n      }\n\n      recruitmentofficesalespersonsArrayErrors[index] = recruitmentofficesalespersonsErrors;\n    });\n\n    if (recruitmentofficesalespersonsArrayErrors.length) {\n      errors.recruitmentofficesalespersons = recruitmentofficesalespersonsArrayErrors;\n    }\n  }\n\n  return errors;\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    activePage: state.tempEdge.active_page\n  };\n};\n\nWizardCreateNewAgencyFourthPage.propTypes = {\n  setActivePage: PropTypes.func.isRequired\n};\nWizardCreateNewAgencyFourthPage = reduxForm({\n  form: 'CreateNewAgency',\n  destroyOnUnmount: false,\n  validate: validate\n})(WizardCreateNewAgencyFourthPage);\nexport default withLocalize(connect(mapStateToProps, {\n  setActivePage: setActivePage\n})(WizardCreateNewAgencyFourthPage));","map":{"version":3,"sources":["/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/Login/CreateNewAgency/WizardCreateNewAgencyFourthPage.js"],"names":["React","Component","ReactDOM","Field","FieldArray","reduxForm","formValueSelector","PropTypes","connect","withLocalize","Translate","setActivePage","ReCaptcha","keys","$","window","WizardCreateNewAgencyFourthPage","props","state","mounted","salespersonlabels","reCaptchaToken","btnDisabled","renderSalesPersonInputs","formProps","errorClass","meta","error","touched","recruitment_office","label","split","fields","length","push","block","map","recruitmentOffice","index","remove","renderInput","placeholder","input","renderError","onChange","recaptchaToken","console","log","setState","renderReCaptcha","ref","captcha","size","height","theme","RECAPTCHA_SITE_KEY","addTranslationsForActiveLanguage","prevProps","prevState","hasActiveLanguageChanged","activeLanguage","params","lang","code","history","location","pathname","then","translations","addTranslationForLanguage","phonelabel","findDOMNode","refs","text","fieldId","name","indexOf","color","formValues","handleSubmit","onSubmit","width","padding","previousPage","invalid","submiting","pristine","validate","errors","recruitmentofficesalespersons","_error","recruitmentofficesalespersonsArrayErrors","forEach","salesperson","recruitmentofficesalespersonsErrors","regX","RegExp","test","salespersonphonenumber","salespersonfirstname","salespersonlastname","salespersongenre","mapStateToProps","activePage","tempEdge","active_page","propTypes","func","isRequired","form","destroyOnUnmount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Field, FieldArray, reduxForm, formValueSelector } from 'redux-form';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport  { setActivePage } from '../../../Redux/actions/tempEdgeActions';\nimport ReCaptcha from \"react-google-recaptcha\";\nimport keys from '../../../apiKeys/keys';\n\nconst $ = window.$;\n\nclass WizardCreateNewAgencyFourthPage extends Component{\n  constructor(props){\n    super(props);\n\n    this.addTranslationsForActiveLanguage();\n  }\n\n  state= { mounted: false, salespersonlabels: '', reCaptchaToken: '', btnDisabled: true }\n\n  componentDidMount(){\n    this.setState({\n      mounted: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    const hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n    if (hasActiveLanguageChanged) {\n      this.props.params.lang = this.props.activeLanguage.code;\n      this.props.history.location.pathname = `/registerAgency/${this.props.activeLanguage.code}`;\n      this.props.history.push(`/registerAgency/${this.props.activeLanguage.code}`);\n      this.addTranslationsForActiveLanguage();\n    }\n  }\n\n  addTranslationsForActiveLanguage(){\n    const {activeLanguage} = this.props;\n\n    if(!activeLanguage){\n      return;\n    }\n\n    import(`../../../translations/${activeLanguage.code}.tempedge.json`)\n      .then(async translations => {\n        await this.props.addTranslationForLanguage(translations, activeLanguage.code);\n\n        let phonelabel = $(ReactDOM.findDOMNode(this.refs.phonelabel)).text();\n\n        if(this.state.mounted && phonelabel != '') {\n          this.setState({\n            salespersonlabels: phonelabel\n          });\n        }\n      });\n  }\n\n  renderError(formProps){\n    let fieldId='';\n\n    if(typeof formProps.input !== 'undefined'){\n      if(formProps.index != null || typeof formProps.index != 'undefined' || formProps.index != ''){\n        if(formProps.input.name.indexOf(\"recruitmentofficesalespersons\") !== -1){\n           if(formProps.input.name.indexOf(\"salespersonfirstname\") !== -1){\n             fieldId = `com.tempedge.error.recruitmentoffice.recruitmentofficesalespersons.salespersonfirstnamerequired`;\n           }else if(formProps.input.name.indexOf(\"salespersonlastname\") !== -1){\n             fieldId = `com.tempedge.error.recruitmentoffice.recruitmentofficesalespersons.salespersonlastnamerequired`;\n           }else if(formProps.input.name.indexOf(\"salespersongenre\") !== -1){\n             fieldId = `com.tempedge.error.recruitmentoffice.recruitmentofficesalespersons.salespersongenrerequired`;\n           }else if(formProps.input.name.indexOf(\"salespersonphonenumber\") !== -1){\n             fieldId = `com.tempedge.error.recruitmentoffice.recruitmentofficesalespersons.salespersonphonenumberrequired`;\n          }\n        }\n      }\n\n      if(formProps.meta.touched && formProps.meta.error && typeof formProps.meta.error !== 'undefined'){\n        return(\n          <p style={{color: '#a94442'}}><Translate id={fieldId}>{formProps.meta.error}</Translate></p>\n        );\n      }\n    }\n  }\n\n  renderSalesPersonInputs = (formProps) => {\n    let errorClass = `col-xs-10 ${(formProps.meta.error && formProps.meta.touched)? 'has-error': ''}`;\n    let recruitment_office = formProps.label.split(\" \");\n\n    if(formProps.fields.length < 1){\n      formProps.fields.push({});\n    }\n\n    let block = formProps.fields.map((recruitmentOffice, index) => (\n      <li key={index} className=\"agency-phone-li\">\n        <div className=\"row\">\n          { (index > 0)? <button type=\"button\" className=\"pull-right phone-num-btn-close\" title=\"Remove Salesperson\" onClick={() => formProps.fields.remove(index)}>X</button>: '' }\n        </div>\n        <Field name={`${recruitmentOffice}.salespersonfirstname`} type=\"text\" placeholder=\"First Name\" index={index} label={recruitment_office[0]} component={this.renderInput} />\n        <Field name={`${recruitmentOffice}.salespersonlastname`} type=\"text\" placeholder=\"Last Name\" index={index} label={recruitment_office[1]} component={this.renderInput} />\n        <div className=\"row agency-phone-box\">\n          <label className=\"col-xs-2 control-label\">{recruitment_office[2]}</label>\n          <div className=\"col-xs-10\">\n            <label><Field name={`${recruitmentOffice}.salespersongenre`} type=\"radio\" index={index} value=\"male\" component=\"input\" />{recruitment_office[3]}</label><br />\n            <label><Field name={`${recruitmentOffice}.salespersongenre`} type=\"radio\" index={index} value=\"female\" component=\"input\" />{recruitment_office[4]}</label>\n          </div>\n        </div>\n        <Field name={`${recruitmentOffice}.salespersonphonenumber`} type=\"text\" placeholder=\"xxx-xxx-xxxx\" index={index} label={recruitment_office[5]} component={this.renderInput} />\n      </li>\n    ));\n\n    return(\n      <React.Fragment>\n        <ul>\n          { block }\n          <li>\n            <div className=\"row\">\n              <button type=\"button\" className=\"center-block\" onClick={() => formProps.fields.push({})}>Add a New Salesperson</button>\n            </div>\n          </li>\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  renderInput = (formProps) => {\n    let errorClass = `col-xs-10 ${(formProps.meta.error && formProps.meta.touched)? 'has-error': ''}`;\n\n    return(\n      <React.Fragment>\n        <div className=\"row agency-phone-box\">\n          <label className=\"col-xs-2 control-label\">{formProps.label}</label>\n          <div className={errorClass}>\n            <input className=\"form-control\" placeholder={formProps.placeholder} {...formProps.input} autoComplete=\"off\" />\n            {this.renderError(formProps)}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  onChange = (recaptchaToken) => {\n    console.log(\"recaptchaToken: \", recaptchaToken);\n\n    this.setState({\n      reCaptchaToken: recaptchaToken,\n      btnDisabled: false\n    });\n  }\n\n  renderReCaptcha = (formProps) => {\n    let errorClass = `col-xs-12 ${(formProps.meta.error && formProps.meta.touched)? 'has-error-login login-input-error': 'login-input'}`;\n\n    return(\n      <div className={errorClass}>\n        <ReCaptcha\n            ref={(ref) => {this.captcha = ref;}}\n            size={formProps.size}\n            height={formProps.height}\n            theme={formProps.theme}\n            sitekey={keys.RECAPTCHA_SITE_KEY}\n            onChange={this.onChange}\n        />\n      </div>\n    );\n  }\n\n  onSubmit(formValues){\n    console.log(formValues);\n  }\n\n  render(){\n    console.log(\"Fourth Page\");\n\n    return(\n      <React.Fragment>\n        <h2 className=\"text-center page-title\"><Translate id=\"com.tempedge.msg.label.newagency\">New Agency</Translate></h2>\n        <form onSubmit={this.props.handleSubmit(this.props.onSubmit)} className=\"form-horizontal center-block register-form\" style={{width: \"40%\", padding: \"30px 0\"}}>\n          <div className=\"form-group\">\n            <span className=\"translation-placeholder\" ref=\"phonelabel\"><Translate id=\"com.tempedge.msg.label.recruitmentofficesalespersongenre\">FirstName LastName Sex Male Female Phone</Translate></span>\n            <FieldArray name=\"recruitmentofficesalespersons\" type=\"text\" placeholder=\"Phone Number\" label={this.state.salespersonlabels} component={this.renderSalesPersonInputs} />\n          </div>\n          <div className=\"form-group prev-next-btns\">\n            <div className=\"col-md-4 col-md-offset-2\">\n              <button type=\"button\" className=\"btn btn-primary btn-block register-save-btn previous\" onClick={this.props.previousPage}>Previous</button>\n            </div>\n            <div className=\"col-md-4\">\n              <button type=\"submit\" className=\"btn btn-primary btn-block register-save-btn next\" disabled={this.props.invalid || this.props.submiting || this.props.pristine || this.state.btnDisabled}><Translate id=\"com.tempedge.msg.label.submit\">Submit</Translate></button>\n            </div>\n          </div>\n        </form>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"center-block new-agency-captcha\">\n              <Field name='captcha' size=\"normal\" height=\"130px\" theme=\"light\" component={this.renderReCaptcha} />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nlet validate = (formValues) => {\n  let errors = {};\n\n  if (!formValues.recruitmentofficesalespersons || !formValues.recruitmentofficesalespersons.length) {\n    errors.recruitmentofficesalespersons = { _error: 'At least one sales person must be entered.' };\n  }else{\n    let recruitmentofficesalespersonsArrayErrors = [];\n\n    formValues.recruitmentofficesalespersons.forEach((salesperson, index) => {\n      let recruitmentofficesalespersonsErrors = {};\n      let regX = new RegExp(/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\\s\\./0-9]*$/g);\n\n      if (!regX.test(salesperson.salespersonphonenumber)){\n        recruitmentofficesalespersonsErrors.salespersonphonenumber = 'Enter the sales person phone number.';\n      }\n\n      if(!salesperson.salespersonfirstname){\n        recruitmentofficesalespersonsErrors.salespersonfirstname = 'Enter the sales person first name.';\n      }\n\n      if(!salesperson.salespersonlastname){\n        recruitmentofficesalespersonsErrors.salespersonlastname = 'Enter the sales person last name.';\n      }\n\n      if(!salesperson.salespersongenre){\n        recruitmentofficesalespersonsErrors.salespersongenre = \"Enter a genre.\";\n      }\n\n      recruitmentofficesalespersonsArrayErrors[index] = recruitmentofficesalespersonsErrors;\n    });\n\n    if(recruitmentofficesalespersonsArrayErrors.length){\n      errors.recruitmentofficesalespersons = recruitmentofficesalespersonsArrayErrors;\n    }\n  }\n\n  return errors;\n}\n\n\nlet mapStateToProps = (state) => {\n  return({\n    activePage: state.tempEdge.active_page\n  });\n}\n\nWizardCreateNewAgencyFourthPage.propTypes = {\n  setActivePage: PropTypes.func.isRequired\n}\n\nWizardCreateNewAgencyFourthPage = reduxForm({\n  form: 'CreateNewAgency',\n  destroyOnUnmount: false,\n  validate: validate\n})(WizardCreateNewAgencyFourthPage);\n\nexport default withLocalize(connect(mapStateToProps, { setActivePage })(WizardCreateNewAgencyFourthPage));\n"]},"metadata":{},"sourceType":"module"}