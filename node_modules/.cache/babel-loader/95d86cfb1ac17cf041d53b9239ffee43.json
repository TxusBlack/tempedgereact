{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact - jose\\\\src\\\\components\\\\common\\\\PrivateRoute\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport history from '../../../history.js';\nimport ApproveUser from '../../../Pages/ApproveUser/ApproveUser';\n\nvar PrivateRoute = function PrivateRoute(props) {\n  var lang = window.location.pathname;\n  lang = lang.split(\"/\");\n\n  var Component = props.component,\n      rest = _objectWithoutProperties(props, [\"component\"]);\n\n  var RouteComponent = React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })); //Welcome component as per 'App.js'\n\n  var RedirectComponent = React.createElement(Redirect, {\n    to: {\n      pathname: props.redirectPath,\n      state: {\n        from: props.location\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }); //Back to Login as per 'App.js'\n  //Conditional rendirect based on user role\n\n  if (props.userRoleId === 1) {\n    RouteComponent = React.createElement(ApproveUser, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  } else if (props.UserStatus === 'P' && props.userRoleId >= 4 && props.AgencyStatus === \"A\") {\n    console.log(\"UserStatus: \".concat(props.UserStatus, \", userRoleId: \").concat(props.userRoleId, \", AgencyStatus: \").concat(props.AgencyStatus));\n    RouteComponent = React.createElement(ApproveUser, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  } else if (props.UserStatus === 'D' && props.userRoleId >= 4 && props.AgencyStatus === \"D\") {\n    history.push(\"/register/:\".concat(lang[2]));\n  }\n\n  return React.createElement(Route, Object.assign({\n    render: function render() {\n      return props.UserStatus === 'A' ? RouteComponent : RedirectComponent;\n    }\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    UserStatus: state.tempEdge.login !== \"\" ? state.tempEdge.login.portalUserList[0].status : null,\n    AgencyStatus: state.tempEdge.login !== \"\" ? state.tempEdge.login.portalUserList[0].organizationEntity.status : null,\n    userRoleId: state.tempEdge.login !== \"\" ? state.tempEdge.login.portalUserList[0].userRoleId : null\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:\\Users\\migue\\Documents\\Jose\\TempEdge\\tempedgereact\\tempedgereact - jose\\src\\components\\common\\PrivateRoute\\PrivateRoute.js"],"names":["React","connect","Redirect","Route","history","ApproveUser","PrivateRoute","props","lang","window","location","pathname","split","Component","component","rest","RouteComponent","RedirectComponent","redirectPath","state","from","userRoleId","UserStatus","AgencyStatus","console","log","push","mapStateToProps","tempEdge","login","portalUserList","status","organizationEntity"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport history from '../../../history.js';\r\nimport ApproveUser from '../../../Pages/ApproveUser/ApproveUser';\r\n\r\nlet PrivateRoute = (props) => {\r\n  let lang = window.location.pathname;\r\n  lang = lang.split(\"/\");\r\n  let { component: Component, ...rest } = props;\r\n  let RouteComponent = <Component {...props} />;   //Welcome component as per 'App.js'\r\n  let RedirectComponent = <Redirect to={{ pathname: props.redirectPath, state: { from: props.location }}} />;   //Back to Login as per 'App.js'\r\n\r\n  //Conditional rendirect based on user role\r\n  if(props.userRoleId === 1){\r\n    RouteComponent = <ApproveUser {...props} />\r\n  }else if(props.UserStatus === 'P' && props.userRoleId >= 4 && props.AgencyStatus === \"A\"){\r\n    console.log(`UserStatus: ${props.UserStatus}, userRoleId: ${props.userRoleId}, AgencyStatus: ${props.AgencyStatus}`);\r\n    RouteComponent = <ApproveUser {...props} />\r\n  }else if(props.UserStatus === 'D' && props.userRoleId >= 4 && props.AgencyStatus === \"D\"){\r\n    history.push(`/register/:${lang[2]}`);\r\n  }\r\n\r\n  return (\r\n    <Route render={() => (props.UserStatus === 'A') ? RouteComponent : RedirectComponent} {...rest} />\r\n  );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    UserStatus: (state.tempEdge.login !== \"\")? state.tempEdge.login.portalUserList[0].status: null,\r\n    AgencyStatus: (state.tempEdge.login !== \"\")? state.tempEdge.login.portalUserList[0].organizationEntity.status: null,\r\n    userRoleId: (state.tempEdge.login !== \"\")? state.tempEdge.login.portalUserList[0].userRoleId: null\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}