{"ast":null,"code":"import _classCallCheck from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/Login/CreateNewAgency/WizardCreateNewAgencyFirstPage.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport DropdownList from 'react-widgets/lib/DropdownList';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport PropTypes from 'prop-types';\nimport { required, date } from 'redux-form-validators';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport { setActivePage } from '../../../Redux/actions/tempEdgeActions';\n\nvar WizardCreateNewAgencyFirstPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WizardCreateNewAgencyFirstPage, _Component);\n\n  function WizardCreateNewAgencyFirstPage(props) {\n    var _this;\n\n    _classCallCheck(this, WizardCreateNewAgencyFirstPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WizardCreateNewAgencyFirstPage).call(this, props));\n    _this.state = {\n      region_list: []\n    };\n\n    _this.renderDropdownList = function (formProps) {\n      var errorClass = \"col-xs-10 \".concat(formProps.meta.error && formProps.meta.touched ? 'has-error-dob' : '');\n      return React.createElement(\"div\", {\n        className: errorClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(DropdownList, Object.assign({}, formProps.input, {\n        data: formProps.data,\n        valueField: formProps.valueField,\n        textField: formProps.textField,\n        onChange: formProps.input.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), _this.renderError(formProps));\n    };\n\n    _this.renderInput = function (formProps) {\n      var errorClass = \"col-xs-10 \".concat(formProps.meta.error && formProps.meta.touched ? 'has-error' : '');\n      return React.createElement(\"div\", {\n        className: errorClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        className: \"form-control\",\n        placeholder: formProps.placeholder\n      }, formProps.input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), \"      \", _this.renderError(formProps));\n    };\n\n    _this.addTranslationsForActiveLanguage();\n\n    return _this;\n  }\n\n  _createClass(WizardCreateNewAgencyFirstPage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n      if (hasActiveLanguageChanged) {\n        this.props.params.lang = this.props.activeLanguage.code;\n        this.props.history.location.pathname = \"/registerAgency/\".concat(this.props.activeLanguage.code);\n        this.props.history.push(\"/registerAgency/\".concat(this.props.activeLanguage.code));\n        this.addTranslationsForActiveLanguage();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (typeof nextProps.country === 'undefined') {\n        this.setState({\n          region_list: this.createRegionsPerCountryList(\"United States\")\n        });\n      } else {\n        this.setState({\n          region_list: this.createRegionsPerCountryList(nextProps.country)\n        });\n      }\n    }\n  }, {\n    key: \"addTranslationsForActiveLanguage\",\n    value: function addTranslationsForActiveLanguage() {\n      var _this2 = this;\n\n      var activeLanguage = this.props.activeLanguage;\n\n      if (!activeLanguage) {\n        return;\n      }\n\n      import(\"../../../translations/\".concat(activeLanguage.code, \".tempedge.json\")).then(function (translations) {\n        _this2.props.addTranslationForLanguage(translations, activeLanguage.code);\n      });\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError(formProps) {\n      var fieldId = '';\n      var errMsg = '';\n\n      if (typeof formProps.input !== 'undefined') {\n        fieldId = \"com.tempedge.error.agency.\".concat(formProps.input.name, \"required\");\n        errMsg = formProps.meta.error;\n\n        if (formProps.meta.touched && formProps.meta.error && typeof errMsg !== 'undefined') {\n          return React.createElement(\"p\", {\n            style: {\n              color: '#a94442'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(Translate, {\n            id: fieldId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, errMsg));\n        }\n      }\n    }\n  }, {\n    key: \"createRegionsPerCountryList\",\n    value: function createRegionsPerCountryList(selectedCountry) {\n      var regions;\n      var regions_list = [];\n      this.props.countryList.map(function (country) {\n        if (country.countryName === selectedCountry) {\n          regions = country.regions;\n        }\n      });\n      regions.map(function (region) {\n        regions_list.push(region.name);\n      });\n      return regions_list;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var country_list = [];\n      var region_list = [];\n      var address_list = [\"billing\", \"other\", \"p-o-box\", \"shipping\"];\n      this.props.countryList.map(function (country) {\n        country_list.push(country.countryName);\n      });\n      console.log(\"First Page\");\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-center page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.newagency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"New Agency\")), React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.props.onSubmit),\n        className: \"form-horizontal center-block register-form\",\n        style: {\n          width: \"40%\",\n          padding: \"30px 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.agencyname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Agency Name\")), React.createElement(Field, {\n        name: \"agencyname\",\n        type: \"text\",\n        placeholder: \"Agency Name\",\n        component: this.renderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.agencyaddress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Address\")), React.createElement(Field, {\n        name: \"agencyaddress\",\n        type: \"text\",\n        placeholder: \"Address\",\n        component: this.renderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.agencyappartment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Apartment (Required)\")), React.createElement(Field, {\n        name: \"agencyappartment\",\n        type: \"text\",\n        placeholder: \"Apartment\",\n        component: this.renderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.agencyzipcode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Zip Code\")), React.createElement(Field, {\n        name: \"agencyzipcode\",\n        type: \"text\",\n        placeholder: \"Zip Code\",\n        component: this.renderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.addresstype\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Address Type\")), React.createElement(Field, {\n        name: \"agencydropdown\",\n        component: this.renderDropdownList,\n        data: address_list,\n        valueField: \"value\",\n        textField: \"option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"State\")), React.createElement(Field, {\n        name: \"agencystate\",\n        component: this.renderDropdownList,\n        data: this.state.region_list,\n        valueField: \"value\",\n        textField: \"state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-xs-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Country\")), React.createElement(Field, {\n        name: \"agencycountry\",\n        component: this.renderDropdownList,\n        data: country_list,\n        valueField: \"value\",\n        textField: \"country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group prev-next-btns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6 col-md-offset-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block register-save-btn next\",\n        disabled: this.props.invalid || this.props.submiting || this.props.pristine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Translate, {\n        id: \"com.tempedge.msg.label.next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Next\"))))));\n    }\n  }]);\n\n  return WizardCreateNewAgencyFirstPage;\n}(Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.agencycountry) {\n    errors.agencycountry = 'Please choose a country from the list.';\n  }\n\n  if (!formValues.agencystate) {\n    errors.agencystate = 'Please choose a state from the list.';\n  }\n\n  if (!formValues.agencydropdown) {\n    errors.agencydropdown = 'Please choose an option from the list.';\n  }\n\n  if (!formValues.agencyname) {\n    errors.agencyname = 'Please enter the agency name.';\n  }\n\n  if (!formValues.agencyaddress) {\n    errors.agencyaddress = 'Please enter the agency address.';\n  }\n\n  if (!formValues.agencyappartment) {\n    errors.agencyappartment = 'Please enter the agency appartment.';\n  }\n\n  if (!formValues.agencyzipcode) {\n    errors.agencyzipcode = 'Please enter the agency zip code.';\n  }\n\n  return errors;\n};\n\nWizardCreateNewAgencyFirstPage = reduxForm({\n  form: 'CreateNewAgency',\n  //                 <------ form name\n  destroyOnUnmount: false,\n  //        <------ preserve form data\n  // forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate: validate\n})(WizardCreateNewAgencyFirstPage);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var selector = formValueSelector('CreateNewAgency'); // <-- same as form name\n\n  return {\n    country: selector(state, 'agencycountry')\n  };\n};\n\nexport default withLocalize(connect(mapStateToProps)(WizardCreateNewAgencyFirstPage));","map":{"version":3,"sources":["/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/Login/CreateNewAgency/WizardCreateNewAgencyFirstPage.js"],"names":["React","Component","ReactDOM","Field","reduxForm","formValueSelector","DropdownList","PropTypes","required","date","connect","withLocalize","Translate","setActivePage","WizardCreateNewAgencyFirstPage","props","state","region_list","renderDropdownList","formProps","errorClass","meta","error","touched","input","data","valueField","textField","onChange","renderError","renderInput","placeholder","addTranslationsForActiveLanguage","prevProps","prevState","hasActiveLanguageChanged","activeLanguage","params","lang","code","history","location","pathname","push","nextProps","country","setState","createRegionsPerCountryList","then","translations","addTranslationForLanguage","fieldId","errMsg","name","color","selectedCountry","regions","regions_list","countryList","map","countryName","region","country_list","address_list","console","log","handleSubmit","onSubmit","width","padding","invalid","submiting","pristine","validate","formValues","errors","agencycountry","agencystate","agencydropdown","agencyname","agencyaddress","agencyappartment","agencyzipcode","form","destroyOnUnmount","mapStateToProps","selector"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport DropdownList from 'react-widgets/lib/DropdownList';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport PropTypes from 'prop-types';\nimport { required, date } from 'redux-form-validators';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport  { setActivePage } from '../../../Redux/actions/tempEdgeActions';\n\nclass WizardCreateNewAgencyFirstPage extends Component{\n  constructor(props){\n    super(props);\n\n    this.addTranslationsForActiveLanguage();\n  }\n\n  state = {\n    region_list: []\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    const hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n    if (hasActiveLanguageChanged) {\n      this.props.params.lang = this.props.activeLanguage.code;\n      this.props.history.location.pathname = `/registerAgency/${this.props.activeLanguage.code}`;\n      this.props.history.push(`/registerAgency/${this.props.activeLanguage.code}`);\n      this.addTranslationsForActiveLanguage();\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(typeof nextProps.country === 'undefined'){\n      this.setState({\n        region_list: this.createRegionsPerCountryList(\"United States\")\n      })\n    }else{\n      this.setState({\n        region_list: this.createRegionsPerCountryList(nextProps.country)\n      });\n    }\n  }\n\n  addTranslationsForActiveLanguage(){\n    const {activeLanguage} = this.props;\n\n    if (!activeLanguage) {\n      return;\n    }\n\n    import(`../../../translations/${activeLanguage.code}.tempedge.json`)\n      .then(translations => {\n        this.props.addTranslationForLanguage(translations, activeLanguage.code)\n      });\n  }\n\n  renderError(formProps){\n    let fieldId='';\n    let errMsg = '';\n\n    if(typeof formProps.input !== 'undefined'){\n      fieldId = `com.tempedge.error.agency.${formProps.input.name}required`;\n      errMsg = formProps.meta.error;\n\n      if(formProps.meta.touched && formProps.meta.error && typeof errMsg !== 'undefined'){\n        return(\n          <p style={{color: '#a94442'}}><Translate id={fieldId}>{errMsg}</Translate></p>\n        );\n      }\n    }\n  }\n\n  renderDropdownList = (formProps) => {\n    let errorClass = `col-xs-10 ${(formProps.meta.error && formProps.meta.touched)? 'has-error-dob': ''}`;\n\n    return(\n      <div className={errorClass}>\n        <DropdownList {...formProps.input} data={formProps.data} valueField={formProps.valueField} textField={formProps.textField} onChange={formProps.input.onChange} />\n        {this.renderError(formProps)}\n      </div>\n    );\n  }\n\n  renderInput = (formProps) => {\n    let errorClass = `col-xs-10 ${(formProps.meta.error && formProps.meta.touched)? 'has-error': ''}`;\n\n    return(\n      <div className={errorClass}>\n        <input className=\"form-control\" placeholder={formProps.placeholder} {...formProps.input} autoComplete=\"off\" />      {/*<input onChange={formProps.input.onChange} value={formProps.input.value} />*/}\n        {this.renderError(formProps)}\n      </div>\n    );\n  }\n\n  createRegionsPerCountryList(selectedCountry){\n    let regions;\n    let regions_list = [];\n\n    this.props.countryList.map((country) => {\n      if(country.countryName === selectedCountry){\n        regions = country.regions;\n      }\n    });\n\n    regions.map((region) => {\n      regions_list.push(region.name);\n    });\n\n    return regions_list;\n  }\n\n  render(){\n    let country_list = [];\n    let region_list = [];\n    let address_list = [\"billing\", \"other\", \"p-o-box\", \"shipping\"];\n\n    this.props.countryList.map((country) => {\n      country_list.push(country.countryName);\n    });\n\n    console.log(\"First Page\");\n\n    return(\n      <React.Fragment>\n        <h2 className=\"text-center page-title\"><Translate id=\"com.tempedge.msg.label.newagency\">New Agency</Translate></h2>\n        <form onSubmit={this.props.handleSubmit(this.props.onSubmit)} className=\"form-horizontal center-block register-form\" style={{width: \"40%\", padding: \"30px 0\"}}>\n          <div className=\"form-group\">\n              <label className=\"col-xs-2 control-label\"><Translate id=\"com.tempedge.msg.label.agencyname\">Agency Name</Translate></label>\n              <Field name=\"agencyname\" type=\"text\" placeholder=\"Agency Name\" component={this.renderInput} />\n          </div>\n          <div className=\"form-group\">\n              <label className=\"col-xs-2 control-label\"><Translate id=\"com.tempedge.msg.label.agencyaddress\">Address</Translate></label>\n              <Field name=\"agencyaddress\" type=\"text\" placeholder=\"Address\" component={this.renderInput} />\n          </div>\n          <div className=\"form-group\">\n              <label className=\"col-xs-2 control-label\"><Translate id=\"com.tempedge.msg.label.agencyappartment\">Apartment (Required)</Translate></label>\n              <Field name=\"agencyappartment\" type=\"text\" placeholder=\"Apartment\" component={this.renderInput} />\n          </div>\n          <div className=\"form-group\">\n              <label className=\"col-xs-2 control-label\"><Translate id=\"com.tempedge.msg.label.agencyzipcode\">Zip Code</Translate></label>\n              <Field name=\"agencyzipcode\" type=\"text\" placeholder=\"Zip Code\" component={this.renderInput} />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"col-xs-2 control-label\"><Translate id=\"com.tempedge.msg.label.addresstype\">Address Type</Translate></label>\n            <Field  name=\"agencydropdown\" component={this.renderDropdownList} data={address_list} valueField=\"value\" textField=\"option\" />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"col-xs-2 control-label\"><Translate id=\"com.tempedge.msg.label.state\">State</Translate></label>\n            <Field  name=\"agencystate\" component={this.renderDropdownList} data={this.state.region_list} valueField=\"value\" textField=\"state\" />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"col-xs-2 control-label\"><Translate id=\"com.tempedge.msg.label.country\">Country</Translate></label>\n            <Field  name=\"agencycountry\" component={this.renderDropdownList} data={country_list} valueField=\"value\" textField=\"country\" />\n          </div>\n          <div className=\"form-group prev-next-btns\">\n              <div className=\"col-md-6 col-md-offset-3\">\n                <button type=\"submit\" className=\"btn btn-primary btn-block register-save-btn next\" disabled={this.props.invalid || this.props.submiting || this.props.pristine}><Translate id=\"com.tempedge.msg.label.next\">Next</Translate></button>\n              </div>\n          </div>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nlet validate = (formValues) => {\n  let errors ={};\n\n  if(!formValues.agencycountry){\n    errors.agencycountry = 'Please choose a country from the list.';\n  }\n\n  if(!formValues.agencystate){\n    errors.agencystate = 'Please choose a state from the list.';\n  }\n\n  if(!formValues.agencydropdown){\n    errors.agencydropdown = 'Please choose an option from the list.';\n  }\n\n  if(!formValues.agencyname){\n    errors.agencyname = 'Please enter the agency name.';\n  }\n\n  if(!formValues.agencyaddress){\n    errors.agencyaddress = 'Please enter the agency address.';\n  }\n\n  if(!formValues.agencyappartment){\n    errors.agencyappartment = 'Please enter the agency appartment.';\n  }\n\n  if(!formValues.agencyzipcode){\n    errors.agencyzipcode = 'Please enter the agency zip code.';\n  }\n\n  return errors;\n}\n\nWizardCreateNewAgencyFirstPage = reduxForm({\n  form: 'CreateNewAgency', //                 <------ form name\n  destroyOnUnmount: false, //        <------ preserve form data\n  // forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate: validate\n})(WizardCreateNewAgencyFirstPage);\n\nlet mapStateToProps = (state) => {\n  let selector = formValueSelector('CreateNewAgency') // <-- same as form name\n  return({\n    country: selector(state, 'agencycountry')\n  });\n}\n\nexport default withLocalize(connect(mapStateToProps)(WizardCreateNewAgencyFirstPage));\n"]},"metadata":{},"sourceType":"module"}