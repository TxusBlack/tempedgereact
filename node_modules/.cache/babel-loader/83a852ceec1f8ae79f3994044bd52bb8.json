{"ast":null,"code":"import _regeneratorRuntime from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/FaceMash/FaceMashMobile.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport Webcam from \"react-webcam\";\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport { setActivePage } from '../../Redux/actions/tempEdgeActions';\nimport EventEmitter from 'events';\nimport FaceTracker from '../assets/tracking';\nimport '../assets/face.min.js';\nimport ModalConfirm from '../../Modals/FaceMashConfirm/Modal';\nimport ModalFail from '../../Modals/FaceMashFail/Modal';\nvar $ = window.$;\nvar canvas_width = 320;\nvar canvas_height;\n\nvar FaceMashMobile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FaceMashMobile, _React$Component);\n\n  function FaceMashMobile(props) {\n    var _this;\n\n    _classCallCheck(this, FaceMashMobile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FaceMashMobile).call(this, props));\n    _this.state = {\n      initialized: 0,\n      start: 0,\n      delay: 5,\n      // <== Face Detection Time\n      trackerTask: null,\n      faceDetectTracker: null,\n      faceDetected: false,\n      play: null,\n      stop: null,\n      waitMsg: \"\",\n      employeeName: \"\",\n      timeStatus: \"\"\n    };\n    _this.reStartTracking =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var delay;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              delay = 3000; //Delay before 'Please Wait' message gets replaced.\n              //Set canvas width (default 320px) where trackers will detect faces and draw rectangles.\n\n              _this.setCanvasWidth(canvas_width); //If this is the first time the FaceMash component is loaded, set delay to zero.\n\n\n              if (!(_this.state.initialized < 1)) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 5;\n              return _this.setState({\n                initialized: 1\n              }, function () {\n                delay = 0;\n              });\n\n            case 5:\n              //Otherwise continue with the default delay of 3 secs.\n              setTimeout(function () {\n                _this.setWaitMessage(_this.state.delay);\n\n                _this.setTimerStart();\n\n                _this.state.trackerTask.run();\n              }, delay);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.setWaitMessage = function (sec) {\n      if (sec > 0) {\n        _this.setState({\n          waitMsg: \"Please stand still for \".concat(sec, \" seconds.\")\n        });\n      } else if (sec < 6) {\n        _this.setState({\n          waitMsg: \"\"\n        });\n      }\n    };\n\n    _this.setRef = function (webcam) {\n      _this.webcam = webcam;\n    };\n\n    _this.capture = function () {\n      var imageSrc = _this.webcam.getScreenshot();\n\n      return imageSrc;\n    };\n\n    _this.initFaceDetectTracker = function (tracker, canvas, context, faceDetectTracker) {\n      tracker.setInitialScale(4);\n      tracker.setStepSize(2);\n      tracker.setEdgesDensity(0.1);\n\n      _this.setTimerStart();\n\n      var seconds = 0;\n      var canvasWidth = canvas.width;\n      tracker.on('track', function (event) {\n        console.log(\"initFaceDetectTracker Running!\"); //This will kick in as soon as a face is detected\n\n        event.data.forEach(function (rect) {\n          //This will set faceDetected to true, given a face has already been detected\n          if (!_this.state.faceDetected) {\n            console.log(\"Face Detected!\");\n\n            _this.resetFaceDetected(true); //Set faceDetected to true.\n\n          }\n        });\n      });\n    };\n\n    _this.initFaceTracker = function (tracker, canvas, context, trackerTask) {\n      tracker.setInitialScale(4);\n      tracker.setStepSize(2);\n      tracker.setEdgesDensity(0.1);\n\n      _this.setTimerStart();\n\n      var seconds = 0;\n      var canvasWidth = canvas.width;\n      tracker.on('track', function (event) {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        event.data.forEach(function (rect) {\n          // Calculate elapsed to tenth of a second:\n          var elapsed = Math.round((new Date() - _this.state.start) / 100); // This will give a number with one digit after the decimal dot (xx.x):\n\n          seconds = (elapsed / 10).toFixed(1);\n          console.log(\"start: \", _this.state.start);\n          console.log(\"elapsed: \", elapsed);\n          console.log(\"secs: \", seconds);\n\n          _this.setState({\n            waitMsg: \"Please stand still for \".concat(parseInt(6 - seconds), \" seconds.\")\n          });\n\n          if (seconds > _this.state.delay) {\n            var imageSrc = _this.capture();\n\n            trackerTask.stop();\n\n            _this.setCanvasWidth(0); //CALL TO SERVER REST API\n            // ...\n            //***\n            //ONCE CALL ON PROMISE SOLVED DO THIS:\n\n\n            if (_this.state.faceDetected) {\n              console.log(\"Success!\");\n              /*** ON SUCCESS ***/\n\n              _this.setState({\n                employeeName: \"Luis Diaz\",\n                timeStatus: \"In\"\n              }, function () {\n                _this.toggleModal(0); //Opens Sucess Modal\n\n              });\n              /*** ON FAIL ***/\n              // this.setState({\n              //   employeeName: \"Luis Diaz\",\n              //   timeStatus: \"\"\n              // }, () => {\n              //   this.toggleModal(-1);   //Opens Fail Modal\n              // });\n              //*****\n\n            }\n\n            console.log(\"Canvas Width: \", canvasWidth);\n            console.log(\"Captured Image: \", imageSrc);\n          }\n\n          context.strokeStyle = 'red';\n          context.strokeRect(rect.x, rect.y, rect.width, rect.height);\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FaceMashMobile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var canvas = document.getElementById('canvas');\n      var context = canvas.getContext('2d');\n      var tracker = new window.tracking.ObjectTracker(\"face\");\n      var tracker2 = new window.tracking.ObjectTracker(\"face\");\n      this.setWaitMessage(this.state.delay);\n      this.setState({\n        waitMsg: \"Please Wait.\",\n        trackerTask: window.tracking.track('#facemash', tracker, {\n          camera: true\n        }),\n        faceDetectTracker: window.tracking.track('#facemash', tracker2, {\n          camera: true\n        })\n      }, function () {\n        _this2.initFaceTracker(tracker, canvas, context, _this2.state.trackerTask);\n\n        _this2.initFaceDetectTracker(tracker2, canvas, context, _this2.state.faceDetectTracker);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log(\"this.state.trackerTask: \", this.state.trackerTask);\n      this.state.trackerTask.stop();\n      this.state.faceDetectTracker.stop();\n      this.state.trackerTask.events_.stopVideoFeed[0]();\n    } //Set starting time for timer\n\n  }, {\n    key: \"setTimerStart\",\n    value: function setTimerStart() {\n      this.setState({\n        start: Date.now()\n      });\n    } //Set trackers canvas width (area on which to detect a face and draw rectangles)\n\n  }, {\n    key: \"setCanvasWidth\",\n    value: function setCanvasWidth(width) {\n      var canvas = document.getElementById('canvas');\n      canvas.width = width;\n    } //re-starts 1st tracker that finds a face\n\n  }, {\n    key: \"reStartfaceDetectTracker\",\n    value: function reStartfaceDetectTracker() {\n      this.state.faceDetectTracker.run();\n      this.setState({\n        waitMsg: 'Please Wait.'\n      });\n    } //re-starts 2nd tracker that takes picture\n\n  }, {\n    key: \"resetFaceDetected\",\n    //Change state for faceDetected\n    value: function resetFaceDetected(faceState) {\n      var _this3 = this;\n\n      console.log(\"Resseting Face state to: \", faceState); //Stop first tracker given a feace has already been detected\n\n      this.state.faceDetectTracker.stop(); //Set faceDetected to true in the state\n\n      this.setState({\n        faceDetected: faceState\n      }, function () {\n        if (_this3.state.faceDetected) {\n          _this3.reStartTracking(); //re-start 2nd tracker to take picture\n\n        }\n      });\n    }\n  }, {\n    key: \"toggleModal\",\n    //Open Login success/failure modals\n    value: function toggleModal(mode) {\n      if (mode > -1) {\n        this.setWaitMessage(0);\n        this.resetFaceDetected(false);\n        $(ReactDOM.findDOMNode(this.refs.faceMashConfirmModal)).modal();\n      } else if (mode < 0) {\n        this.setWaitMessage(0);\n        this.resetFaceDetected(false);\n        $(ReactDOM.findDOMNode(this.refs.faceMashFailModal)).modal();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var videoConstraints = {\n        width: canvas_width,\n        height: canvas_height,\n        facingMode: \"user\"\n      };\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 col-md-offset-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          width: videoConstraints.width,\n          height: videoConstraints.height,\n          marginBottom: 40\n        },\n        className: \"center-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Webcam, {\n        className: \"center-block\",\n        audio: false,\n        height: 240,\n        id: \"facemash\",\n        ref: this.setRef,\n        screenshotFormat: \"image/jpeg\",\n        width: 320,\n        videoConstraints: videoConstraints,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"canvas\",\n        width: \"320\",\n        height: \"240\",\n        style: {\n          position: \"absolute\",\n          top: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, this.state.waitMsg))), React.createElement(ModalConfirm, {\n        title: \"TempEdge Time Track\",\n        employee: this.state.employeeName,\n        timeStatus: this.state.timeStatus,\n        reStartfaceDetectTracker: function reStartfaceDetectTracker() {\n          return _this4.reStartfaceDetectTracker();\n        },\n        ref: \"faceMashConfirmModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(ModalFail, {\n        title: \"TempEdge Time Track\",\n        employee: this.state.employeeName,\n        reStartfaceDetectTracker: function reStartfaceDetectTracker() {\n          return _this4.reStartfaceDetectTracker();\n        },\n        ref: \"faceMashFailModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FaceMashMobile;\n}(React.Component);\n\nexport default withLocalize(connect(null)(FaceMashMobile));","map":{"version":3,"sources":["/home/havoc/Documents/TempEdge/git/frontend/tempedgereact/src/Pages/FaceMash/FaceMashMobile.js"],"names":["React","ReactDOM","Webcam","connect","withLocalize","Translate","setActivePage","EventEmitter","FaceTracker","ModalConfirm","ModalFail","$","window","canvas_width","canvas_height","FaceMashMobile","props","state","initialized","start","delay","trackerTask","faceDetectTracker","faceDetected","play","stop","waitMsg","employeeName","timeStatus","reStartTracking","setCanvasWidth","setState","setTimeout","setWaitMessage","setTimerStart","run","sec","setRef","webcam","capture","imageSrc","getScreenshot","initFaceDetectTracker","tracker","canvas","context","setInitialScale","setStepSize","setEdgesDensity","seconds","canvasWidth","width","on","event","console","log","data","forEach","rect","resetFaceDetected","initFaceTracker","clearRect","height","elapsed","Math","round","Date","toFixed","parseInt","toggleModal","strokeStyle","strokeRect","x","y","document","getElementById","getContext","tracking","ObjectTracker","tracker2","track","camera","events_","stopVideoFeed","now","faceState","mode","findDOMNode","refs","faceMashConfirmModal","modal","faceMashFailModal","videoConstraints","facingMode","position","marginBottom","top","textAlign","reStartfaceDetectTracker","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport Webcam from \"react-webcam\";\nimport { connect } from 'react-redux';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport  { setActivePage } from '../../Redux/actions/tempEdgeActions';\nimport EventEmitter from 'events';\nimport FaceTracker from '../assets/tracking';\nimport '../assets/face.min.js';\nimport ModalConfirm from '../../Modals/FaceMashConfirm/Modal';\nimport ModalFail from '../../Modals/FaceMashFail/Modal';\n\nconst $ = window.$;\n\nlet canvas_width = 320;\nlet canvas_height: 240;\n\nclass FaceMashMobile extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  state = {\n    initialized: 0,\n    start: 0,\n    delay: 5,  // <== Face Detection Time\n    trackerTask: null,\n    faceDetectTracker: null,\n    faceDetected: false,\n    play: null,\n    stop: null,\n    waitMsg: \"\",\n    employeeName: \"\",\n    timeStatus: \"\"\n  };\n\n  componentDidMount(){\n    let canvas = document.getElementById('canvas');\n    let context = canvas.getContext('2d');\n    let tracker = new window.tracking.ObjectTracker(\"face\");\n    let tracker2 = new window.tracking.ObjectTracker(\"face\");\n\n    this.setWaitMessage(this.state.delay);\n    this.setState({\n      waitMsg: `Please Wait.`,\n      trackerTask: window.tracking.track('#facemash', tracker, { camera: true }),\n      faceDetectTracker: window.tracking.track('#facemash', tracker2, { camera: true })\n    }, () => {\n      this.initFaceTracker(tracker, canvas, context, this.state.trackerTask);\n      this.initFaceDetectTracker(tracker2, canvas, context, this.state.faceDetectTracker);\n    });\n  }\n\n  componentWillUnmount(){\n    console.log(\"this.state.trackerTask: \", this.state.trackerTask);\n    this.state.trackerTask.stop();\n    this.state.faceDetectTracker.stop();\n    this.state.trackerTask.events_.stopVideoFeed[0]();\n  }\n\n  //Set starting time for timer\n  setTimerStart(){\n    this.setState({\n      start: Date.now()\n    });\n  }\n\n  //Set trackers canvas width (area on which to detect a face and draw rectangles)\n  setCanvasWidth(width){\n    let canvas = document.getElementById('canvas');\n    canvas.width = width;\n  }\n\n  //re-starts 1st tracker that finds a face\n  reStartfaceDetectTracker(){\n    this.state.faceDetectTracker.run();\n\n    this.setState({\n      waitMsg: 'Please Wait.'\n    });\n  }\n\n  //re-starts 2nd tracker that takes picture\n   reStartTracking = async () => {\n    let delay = 3000;    //Delay before 'Please Wait' message gets replaced.\n\n    //Set canvas width (default 320px) where trackers will detect faces and draw rectangles.\n    this.setCanvasWidth(canvas_width);\n\n    //If this is the first time the FaceMash component is loaded, set delay to zero.\n    if(this.state.initialized < 1){\n      await this.setState({\n        initialized: 1\n      }, () => {\n        delay = 0;\n      });\n    }\n\n    //Otherwise continue with the default delay of 3 secs.\n    setTimeout(() => {\n      this.setWaitMessage(this.state.delay);\n      this.setTimerStart();\n      this.state.trackerTask.run();\n    }, delay)\n  }\n\n  //Change state for faceDetected\n  resetFaceDetected(faceState){\n    console.log(\"Resseting Face state to: \", faceState);\n\n    //Stop first tracker given a feace has already been detected\n    this.state.faceDetectTracker.stop();\n\n    //Set faceDetected to true in the state\n    this.setState({\n      faceDetected: faceState\n    }, () => {\n      if(this.state.faceDetected){\n          this.reStartTracking();   //re-start 2nd tracker to take picture\n      }\n    });\n  }\n\n  setWaitMessage = (sec) => {\n    if(sec > 0){\n      this.setState({ waitMsg: `Please stand still for ${sec} seconds.` });\n    }else if(sec < 6){\n      this.setState({ waitMsg: `` });\n    }\n  }\n\n  //Open Login success/failure modals\n  toggleModal(mode){\n    if(mode > -1){\n      this.setWaitMessage(0);\n      this.resetFaceDetected(false);\n      $(ReactDOM.findDOMNode(this.refs.faceMashConfirmModal)).modal();\n    }else if(mode < 0){\n      this.setWaitMessage(0);\n      this.resetFaceDetected(false);\n      $(ReactDOM.findDOMNode(this.refs.faceMashFailModal)).modal();\n    }\n  }\n\n  setRef = webcam => {\n    this.webcam =  webcam;\n  };\n\n  //Take user screenshot(s)\n  capture = () => {\n    let imageSrc = this.webcam.getScreenshot();\n    return imageSrc;\n  };\n\n  //Init 1st tracker to detect face\n  initFaceDetectTracker = (tracker, canvas, context, faceDetectTracker) => {\n    tracker.setInitialScale(4);\n    tracker.setStepSize(2);\n    tracker.setEdgesDensity(0.1);\n\n    this.setTimerStart();\n    let seconds = 0;\n    let canvasWidth = canvas.width;\n\n    tracker.on('track', event => {\n      console.log(\"initFaceDetectTracker Running!\");\n\n      //This will kick in as soon as a face is detected\n      event.data.forEach(rect => {\n\n        //This will set faceDetected to true, given a face has already been detected\n        if(!this.state.faceDetected){\n          console.log(\"Face Detected!\");\n\n          this.resetFaceDetected(true);   //Set faceDetected to true.\n        }\n      })\n    })\n  }\n\n  //Init 2nd tracker to take user picture\n  initFaceTracker = (tracker, canvas, context, trackerTask) => {\n    tracker.setInitialScale(4);\n    tracker.setStepSize(2);\n    tracker.setEdgesDensity(0.1);\n\n    this.setTimerStart();\n    let seconds = 0;\n    let canvasWidth = canvas.width;\n\n    tracker.on('track', event => {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      event.data.forEach(rect => {\n        // Calculate elapsed to tenth of a second:\n        let elapsed = Math.round((new Date() - this.state.start) / 100);\n\n        // This will give a number with one digit after the decimal dot (xx.x):\n        seconds = (elapsed / 10).toFixed(1);\n\n        console.log(\"start: \", this.state.start);\n        console.log(\"elapsed: \", elapsed);\n        console.log(\"secs: \", seconds);\n        this.setState({ waitMsg: `Please stand still for ${parseInt(6-seconds)} seconds.` });\n\n        if(seconds > this.state.delay){\n          let imageSrc = this.capture();\n          trackerTask.stop();\n          this.setCanvasWidth(0);\n\n          //CALL TO SERVER REST API\n          // ...\n          //***\n\n          //ONCE CALL ON PROMISE SOLVED DO THIS:\n          if(this.state.faceDetected){\n            console.log(\"Success!\");\n            /*** ON SUCCESS ***/\n            this.setState({\n              employeeName: \"Luis Diaz\",\n              timeStatus: \"In\"\n            }, () => {\n              this.toggleModal(0);   //Opens Sucess Modal\n            });\n\n            /*** ON FAIL ***/\n            // this.setState({\n            //   employeeName: \"Luis Diaz\",\n            //   timeStatus: \"\"\n            // }, () => {\n            //   this.toggleModal(-1);   //Opens Fail Modal\n            // });\n            //*****\n          }\n\n          console.log(\"Canvas Width: \", canvasWidth);\n          console.log(\"Captured Image: \", imageSrc);\n        }\n\n        context.strokeStyle = 'red';\n        context.strokeRect(rect.x, rect.y, rect.width, rect.height);\n      })\n    })\n  }\n\n  render() {\n    let videoConstraints = {\n      width: canvas_width,\n      height: canvas_height,\n      facingMode: \"user\"\n    };\n\n    return(\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-8 col-md-offset-2\">\n            <div style={{height:40}}></div>\n            <div style={{position: \"relative\", width: videoConstraints.width, height: videoConstraints.height, marginBottom:40}} className=\"center-block\">\n              <Webcam className=\"center-block\"\n                audio={false}\n                height={240}\n                id=\"facemash\"\n                ref={this.setRef}\n                screenshotFormat=\"image/jpeg\"\n                width={320}\n                videoConstraints={videoConstraints}\n              />\n              <canvas id=\"canvas\" width=\"320\" height=\"240\" style={{position: \"absolute\", top: 0}}></canvas>\n            </div>\n            <h3 style={{textAlign: \"center\"}}>{this.state.waitMsg}</h3>\n          </div>\n        </div>\n        <ModalConfirm title=\"TempEdge Time Track\" employee={this.state.employeeName} timeStatus={this.state.timeStatus} reStartfaceDetectTracker={() => this.reStartfaceDetectTracker()} ref=\"faceMashConfirmModal\" />\n        <ModalFail title=\"TempEdge Time Track\" employee={this.state.employeeName} reStartfaceDetectTracker={() => this.reStartfaceDetectTracker()} ref=\"faceMashFailModal\" />\n      </div>\n    );\n  }\n}\n\nexport default withLocalize(connect(null)(FaceMashMobile));\n"]},"metadata":{},"sourceType":"module"}