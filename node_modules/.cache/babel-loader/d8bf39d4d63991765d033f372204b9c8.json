{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport createRootReducer from '../Redux/reducers/index';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { createTransform } from 'redux-persist';\nimport { createBlacklistFilter } from 'redux-persist-transform-filter';\nimport { routerMiddleware } from 'connected-react-router';\nimport history from '../history';\nimport JSOG from 'jsog'; //Circular JSON Structures\n//For dispatching history actions\n\nvar middleware = [thunk, routerMiddleware(history)];\nvar JSOGTransform = createTransform(function (inboundState, key) {\n  return JSOG.encode(inboundState);\n}, function (outboundState, key) {\n  return JSOG.decode(outboundState);\n});\nvar saveSubsetBlacklistFilter = createBlacklistFilter('form', ['login']);\nvar config = {\n  key: 'root',\n  storage: storageSession,\n  //blacklist: ['form'],\n  transforms: [JSOGTransform] //[saveSubsetBlacklistFilter, JSOGTransform]\n\n};\nvar store = createStore(persistReducer(config, createRootReducer(history)), compose(applyMiddleware.apply(void 0, middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nvar persistor = persistStore(store);\nexport { store, persistor, history, JSOGTransform };","map":{"version":3,"sources":["C:\\Users\\migue\\Documents\\Jose\\TempEdge\\tempedgereact\\tempedgereact - jose\\src\\store\\store.js"],"names":["createStore","applyMiddleware","compose","thunk","createRootReducer","storageSession","persistStore","persistReducer","createTransform","createBlacklistFilter","routerMiddleware","history","JSOG","middleware","JSOGTransform","inboundState","key","encode","outboundState","decode","saveSubsetBlacklistFilter","config","storage","transforms","store","window","__REDUX_DEVTOOLS_EXTENSION__","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAA4B;AAEF;;AAC1B,IAAIC,UAAU,GAAG,CAACV,KAAD,EAAQO,gBAAgB,CAACC,OAAD,CAAxB,CAAjB;AAEA,IAAIG,aAAa,GAAGN,eAAe,CACjC,UAACO,YAAD,EAAgBC,GAAhB;AAAA,SAAwBJ,IAAI,CAACK,MAAL,CAAYF,YAAZ,CAAxB;AAAA,CADiC,EAEjC,UAACG,aAAD,EAAgBF,GAAhB;AAAA,SAAwBJ,IAAI,CAACO,MAAL,CAAYD,aAAZ,CAAxB;AAAA,CAFiC,CAAnC;AAKA,IAAIE,yBAAyB,GAAGX,qBAAqB,CACnD,MADmD,EAEnD,CAAC,OAAD,CAFmD,CAArD;AAKA,IAAIY,MAAM,GAAG;AACXL,EAAAA,GAAG,EAAE,MADM;AAEXM,EAAAA,OAAO,EAAEjB,cAFE;AAGX;AACAkB,EAAAA,UAAU,EAAE,CAACT,aAAD,CAJD,CAIiB;;AAJjB,CAAb;AAOA,IAAIU,KAAK,GAAGxB,WAAW,CAACO,cAAc,CAACc,MAAD,EAASjB,iBAAiB,CAACO,OAAD,CAA1B,CAAf,EAAqDT,OAAO,CAACD,eAAe,MAAf,SAAmBY,UAAnB,CAAD,EAAiCY,MAAM,CAACC,4BAAP,IAAsCD,MAAM,CAACC,4BAAP,EAAvE,CAA5D,CAAvB;AAEA,IAAIC,SAAS,GAAGrB,YAAY,CAACkB,KAAD,CAA5B;AAEA,SAASA,KAAT,EAAgBG,SAAhB,EAA2BhB,OAA3B,EAAoCG,aAApC","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from '../Redux/reducers/index';\r\nimport storageSession from 'redux-persist/lib/storage/session'\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { createTransform } from 'redux-persist';\r\nimport { createBlacklistFilter } from 'redux-persist-transform-filter';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport history from '../history';\r\nimport JSOG from 'jsog';    //Circular JSON Structures\r\n\r\n                          //For dispatching history actions\r\nlet middleware = [thunk, routerMiddleware(history)];\r\n\r\nlet JSOGTransform = createTransform(\r\n  (inboundState,  key) => JSOG.encode(inboundState),\r\n  (outboundState, key) => JSOG.decode(outboundState),\r\n);\r\n\r\nlet saveSubsetBlacklistFilter = createBlacklistFilter(\r\n  'form',\r\n  ['login']\r\n);\r\n\r\nlet config = {\r\n  key: 'root',\r\n  storage: storageSession,\r\n  //blacklist: ['form'],\r\n  transforms: [JSOGTransform] //[saveSubsetBlacklistFilter, JSOGTransform]\r\n}\r\n\r\nlet store = createStore(persistReducer(config, createRootReducer(history)), compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\nlet persistor = persistStore(store);\r\n\r\nexport { store, persistor, history, JSOGTransform };\r\n"]},"metadata":{},"sourceType":"module"}