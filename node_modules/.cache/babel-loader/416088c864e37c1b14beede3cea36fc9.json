{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NotificationsSystem = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _helpers = require('../helpers');\n\nvar _NotificationsContainer = require('./NotificationsContainer');\n\nvar _NotificationsContainer2 = _interopRequireDefault(_NotificationsContainer);\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar NotificationsSystem = exports.NotificationsSystem = function (_Component) {\n  _inherits(NotificationsSystem, _Component);\n\n  function NotificationsSystem() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, NotificationsSystem);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = NotificationsSystem.__proto__ || Object.getPrototypeOf(NotificationsSystem)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      windowWidth: window.innerWidth\n    }, _this._updateWindowWidth = function () {\n      _this.setState({\n        windowWidth: window.innerWidth\n      });\n    }, _this._renderNotificationsContainers = function () {\n      var _this$props = _this.props,\n          theme = _this$props.theme,\n          filter = _this$props.filter;\n      var windowWidth = _this.state.windowWidth;\n      var positions = (0, _helpers.mapObjectValues)(_constants.POSITIONS);\n      var containers = [];\n      var notifications = _this.props.notifications;\n\n      if (typeof filter === 'function') {\n        notifications = notifications.filter(filter);\n      } // render all notifications in the same container at the top for small screens\n\n\n      if (windowWidth < theme.smallScreenMin) {\n        return _react2.default.createElement(_NotificationsContainer2.default, {\n          key: theme.smallScreenPosition || _constants.POSITIONS.top,\n          position: theme.smallScreenPosition || _constants.POSITIONS.top,\n          theme: theme,\n          notifications: notifications\n        });\n      }\n\n      containers.push(positions.map(function (position) {\n        var notifs = notifications.filter(function (notif) {\n          return position === notif.position;\n        });\n        return _react2.default.createElement(_NotificationsContainer2.default, {\n          key: position,\n          position: position,\n          theme: theme,\n          notifications: notifs\n        });\n      }));\n      return containers;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(NotificationsSystem, [{\n    key: 'componentDidMount',\n\n    /**\n     * Add resize listener to update window width when the window is resized\n     * @returns {void}\n     */\n    value: function componentDidMount() {\n      window.addEventListener('resize', this._updateWindowWidth);\n    }\n    /**\n     * Remove resize listener\n     * @returns {void}\n     */\n\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this._updateWindowWidth);\n    }\n    /**\n     * Update window width\n     * @returns {void}\n     * @private\n     */\n\n    /**\n     * Render notifications containers\n     * @returns {XML}\n     * @private\n     */\n\n  }, {\n    key: 'render',\n\n    /**\n     * Render\n     * @returns {XML}\n     */\n    value: function render() {\n      var className = this.props.theme.notificationsSystem.className;\n      return _react2.default.createElement('div', {\n        className: className\n      }, this._renderNotificationsContainers());\n    }\n  }]);\n\n  return NotificationsSystem;\n}(_react.Component);\n/**\n * Map state to props\n * @param {Object} state\n * @returns {{notifications: {Array}}}\n */\n\n\nNotificationsSystem.propTypes = {\n  notifications: _propTypes2.default.array.isRequired,\n  filter: _propTypes2.default.func,\n  theme: _propTypes2.default.shape({\n    smallScreenMin: _propTypes2.default.number.isRequired,\n    smallScreenPosition: _propTypes2.default.oneOf([_constants.POSITIONS.top, _constants.POSITIONS.bottom]),\n    notificationsSystem: _propTypes2.default.shape({\n      className: _propTypes2.default.string\n    })\n  }).isRequired\n};\nNotificationsSystem.defaultProps = {\n  notifications: []\n};\n\nfunction mapStateToProps(state) {\n  return {\n    notifications: state.notifications\n  };\n}\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps)(NotificationsSystem);","map":null,"metadata":{},"sourceType":"script"}