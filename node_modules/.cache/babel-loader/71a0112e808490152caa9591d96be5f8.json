{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\migue\\\\Documents\\\\Jose\\\\TempEdge\\\\tempedgereact\\\\tempedgereact\\\\src\\\\components\\\\common\\\\UploadFile\\\\UploadFile.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport XLSX from 'xlsx';\nvar $ = window.$;\n\nvar UploadFile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UploadFile, _React$Component);\n\n  function UploadFile(props, context) {\n    var _this;\n\n    _classCallCheck(this, UploadFile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadFile).call(this, props, context));\n    _this.state = {\n      workSheet: null\n    };\n\n    _this.onChange = function (file) {\n      var readOnlyTextBox = $(ReactDOM.findDOMNode(_this.refs.fileInputName));\n      if (readOnlyTextBox.length) readOnlyTextBox.val(file.name.replace(/\\\\/g, '/').replace(/.*\\//, ''));\n      var reader = new FileReader();\n      reader.readAsBinaryString(file); //Read Blob as binary\n      //Event Listener for when a file is selected to be uploaded\n\n      reader.onload = function (event) {\n        //(on_file_select_event)\n\n        /* Parse data */\n        var binaryData = event.target.result; //'result' if not 'null', contains the contents of the file as a binary string\n\n        var workbook = XLSX.read(binaryData, {\n          type: 'binary'\n        }); //Contains all worksheets\n\n        /* Get first worksheet */\n\n        var sheetName = workbook.SheetNames[0]; //Name for first worksheet\n\n        var workSheet = workbook.Sheets[sheetName]; //The actual first worksheet\n\n        var data = XLSX.utils.sheet_to_json(workSheet); //Convert worksheet to array of JSON objects\n\n        /* Update state */\n\n        _this.setState(function () {\n          return {\n            workSheet: data\n          };\n        });\n\n        console.log(\"Data>>> \", data);\n      };\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault(); //AJAX POST CALL to send file to SERVER as a Blob\n    };\n\n    _this.addTranslationsForActiveLanguage();\n\n    return _this;\n  }\n\n  _createClass(UploadFile, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\n\n      if (hasActiveLanguageChanged) {\n        this.props.push(\"/upload/\".concat(this.props.activeLanguage.code));\n        this.addTranslationsForActiveLanguage();\n      }\n    }\n  }, {\n    key: \"addTranslationsForActiveLanguage\",\n    value: function addTranslationsForActiveLanguage() {\n      var _this2 = this;\n\n      var activeLanguage = this.props.activeLanguage;\n\n      if (!activeLanguage) {\n        return;\n      }\n\n      import(\"../../../translations/\".concat(activeLanguage.code, \".tempedge.json\")).then(function (translations) {\n        _this2.props.addTranslationForLanguage(translations, activeLanguage.code);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"col-lg-6 col-sm-6 col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Upload File\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"input-group-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Browse\\u2026 \", React.createElement(\"input\", {\n        type: \"file\",\n        onChange: function onChange(e) {\n          return _this3.onChange(e.target.files[0]);\n        },\n        style: {\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        ref: \"fileInputName\",\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return UploadFile;\n}(React.Component);\n\nexport default UploadFile;","map":{"version":3,"sources":["C:\\Users\\migue\\Documents\\Jose\\TempEdge\\tempedgereact\\tempedgereact\\src\\components\\common\\UploadFile\\UploadFile.js"],"names":["React","ReactDOM","XLSX","$","window","UploadFile","props","context","state","workSheet","onChange","file","readOnlyTextBox","findDOMNode","refs","fileInputName","length","val","name","replace","reader","FileReader","readAsBinaryString","onload","event","binaryData","target","result","workbook","read","type","sheetName","SheetNames","Sheets","data","utils","sheet_to_json","setState","console","log","onSubmit","preventDefault","addTranslationsForActiveLanguage","prevProps","prevState","hasActiveLanguageChanged","activeLanguage","push","code","then","translations","addTranslationForLanguage","e","files","display","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport XLSX from 'xlsx';\r\n\r\nconst $ = window.$;\r\n\r\nclass UploadFile extends React.Component{\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.addTranslationsForActiveLanguage();\r\n  }\r\n\r\n  state ={ workSheet: null };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const hasActiveLanguageChanged = prevProps.activeLanguage !== this.props.activeLanguage;\r\n\r\n    if (hasActiveLanguageChanged) {\r\n      this.props.push(`/upload/${this.props.activeLanguage.code}`);\r\n      this.addTranslationsForActiveLanguage();\r\n    }\r\n  }\r\n\r\n  addTranslationsForActiveLanguage() {\r\n    const {activeLanguage} = this.props;\r\n\r\n    if (!activeLanguage) {\r\n      return;\r\n    }\r\n\r\n    import(`../../../translations/${activeLanguage.code}.tempedge.json`)\r\n      .then(translations => {\r\n        this.props.addTranslationForLanguage(translations, activeLanguage.code)\r\n      });\r\n  }\r\n\r\n  onChange = (file) => {\r\n    let readOnlyTextBox = $(ReactDOM.findDOMNode(this.refs.fileInputName));\r\n\r\n    if( readOnlyTextBox.length )\r\n      readOnlyTextBox.val(file.name.replace(/\\\\/g, '/').replace(/.*\\//, ''));\r\n\r\n    let reader = new FileReader();\r\n\r\n    reader.readAsBinaryString(file);    //Read Blob as binary\r\n\r\n    //Event Listener for when a file is selected to be uploaded\r\n    reader.onload = (event) => { //(on_file_select_event)\r\n      /* Parse data */\r\n      let binaryData = event.target.result;   //'result' if not 'null', contains the contents of the file as a binary string\r\n      let workbook = XLSX.read(binaryData, {type:'binary'});    //Contains all worksheets\r\n\r\n      /* Get first worksheet */\r\n      let sheetName = workbook.SheetNames[0];          //Name for first worksheet\r\n      let workSheet = workbook.Sheets[sheetName];      //The actual first worksheet\r\n\r\n      let data = XLSX.utils.sheet_to_json(workSheet);  //Convert worksheet to array of JSON objects\r\n\r\n      /* Update state */\r\n      this.setState(() => ({\r\n        workSheet: data\r\n      }));\r\n\r\n      console.log(\"Data>>> \",data);\r\n    };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    //AJAX POST CALL to send file to SERVER as a Blob\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"col-lg-6 col-sm-6 col-12\">\r\n        <h4>Upload File</h4>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"input-group\">\r\n            <label className=\"input-group-btn\">\r\n              <span className=\"btn btn-primary\">\r\n                Browse&hellip; <input type=\"file\" onChange={(e) => this.onChange(e.target.files[0])}  style={{display: \"none\"}} />\r\n              </span>\r\n            </label>\r\n            <input type=\"text\" className=\"form-control\" ref=\"fileInputName\" readOnly />\r\n          </div><br /><br />\r\n          <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadFile;\r\n"]},"metadata":{},"sourceType":"module"}